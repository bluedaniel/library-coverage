// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Babel code Source to AST 1`] = `
Array [
  Node {
    "end": 39,
    "importKind": "value",
    "loc": SourceLocation {
      "end": Position {
        "column": 38,
        "line": 2,
      },
      "indent": 0,
      "lines": Lines {
        "length": 13,
        "name": null,
        Symbol(recastLinesSecret): Object {
          "cachedSourceMap": null,
          "infos": Array [
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import R, { add, split } from 'ramda';",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import _, { defaults } from 'lodash';",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const num = add(2, 3);",
              "locked": false,
              "sliceEnd": 22,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arr = split('.', 'a.b.c.xyz.d');",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const str = R.toLower('XYZ');",
              "locked": false,
              "sliceEnd": 29,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// → { 'a': 1, 'b': 2 }",
              "locked": false,
              "sliceEnd": 23,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// → [[1, 3], [2, 4]]",
              "locked": false,
              "sliceEnd": 21,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
          ],
          "mappings": Array [],
          "name": null,
        },
      },
      "start": Position {
        "column": 0,
        "line": 2,
      },
    },
    "source": Node {
      "end": 38,
      "extra": Object {
        "raw": "'ramda'",
        "rawValue": "ramda",
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 37,
          "line": 2,
        },
        "indent": 0,
        "lines": Lines {
          "length": 13,
          "name": null,
          Symbol(recastLinesSecret): Object {
            "cachedSourceMap": null,
            "infos": Array [
              Object {
                "indent": 0,
                "line": "",
                "locked": false,
                "sliceEnd": 0,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "import R, { add, split } from 'ramda';",
                "locked": false,
                "sliceEnd": 38,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "import _, { defaults } from 'lodash';",
                "locked": false,
                "sliceEnd": 37,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "",
                "locked": false,
                "sliceEnd": 0,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "const num = add(2, 3);",
                "locked": false,
                "sliceEnd": 22,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "const arr = split('.', 'a.b.c.xyz.d');",
                "locked": false,
                "sliceEnd": 38,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "const str = R.toLower('XYZ');",
                "locked": false,
                "sliceEnd": 29,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "",
                "locked": false,
                "sliceEnd": 0,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                "locked": false,
                "sliceEnd": 53,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "// → { 'a': 1, 'b': 2 }",
                "locked": false,
                "sliceEnd": 23,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                "locked": false,
                "sliceEnd": 53,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "// → [[1, 3], [2, 4]]",
                "locked": false,
                "sliceEnd": 21,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "",
                "locked": false,
                "sliceEnd": 0,
                "sliceStart": 0,
              },
            ],
            "mappings": Array [],
            "name": null,
          },
        },
        "start": Position {
          "column": 30,
          "line": 2,
        },
      },
      "start": 31,
      "type": "StringLiteral",
      "value": "ramda",
    },
    "specifiers": Array [
      Node {
        "end": 9,
        "loc": SourceLocation {
          "end": Position {
            "column": 8,
            "line": 2,
          },
          "indent": 0,
          "lines": Lines {
            "length": 13,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 22,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 29,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → { 'a': 1, 'b': 2 }",
                  "locked": false,
                  "sliceEnd": 23,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → [[1, 3], [2, 4]]",
                  "locked": false,
                  "sliceEnd": 21,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 7,
            "line": 2,
          },
        },
        "local": Node {
          "end": 9,
          "loc": SourceLocation {
            "end": Position {
              "column": 8,
              "line": 2,
            },
            "identifierName": "R",
            "indent": 0,
            "lines": Lines {
              "length": 13,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 22,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 29,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → { 'a': 1, 'b': 2 }",
                    "locked": false,
                    "sliceEnd": 23,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → [[1, 3], [2, 4]]",
                    "locked": false,
                    "sliceEnd": 21,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 7,
              "line": 2,
            },
          },
          "name": "R",
          "start": 8,
          "type": "Identifier",
        },
        "start": 8,
        "type": "ImportDefaultSpecifier",
      },
      Node {
        "end": 16,
        "importKind": null,
        "imported": Node {
          "end": 16,
          "loc": SourceLocation {
            "end": Position {
              "column": 15,
              "line": 2,
            },
            "identifierName": "add",
            "indent": 0,
            "lines": Lines {
              "length": 13,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 22,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 29,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → { 'a': 1, 'b': 2 }",
                    "locked": false,
                    "sliceEnd": 23,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → [[1, 3], [2, 4]]",
                    "locked": false,
                    "sliceEnd": 21,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 12,
              "line": 2,
            },
          },
          "name": "add",
          "start": 13,
          "type": "Identifier",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 15,
            "line": 2,
          },
          "indent": 0,
          "lines": Lines {
            "length": 13,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 22,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 29,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → { 'a': 1, 'b': 2 }",
                  "locked": false,
                  "sliceEnd": 23,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → [[1, 3], [2, 4]]",
                  "locked": false,
                  "sliceEnd": 21,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 12,
            "line": 2,
          },
        },
        "local": Node {
          "__clone": [Function],
          "end": 16,
          "loc": SourceLocation {
            "end": Position {
              "column": 15,
              "line": 2,
            },
            "identifierName": "add",
            "indent": 0,
            "lines": Lines {
              "length": 13,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 22,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 29,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → { 'a': 1, 'b': 2 }",
                    "locked": false,
                    "sliceEnd": 23,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → [[1, 3], [2, 4]]",
                    "locked": false,
                    "sliceEnd": 21,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 12,
              "line": 2,
            },
          },
          "name": "add",
          "start": 13,
          "type": "Identifier",
        },
        "start": 13,
        "type": "ImportSpecifier",
      },
      Node {
        "end": 23,
        "importKind": null,
        "imported": Node {
          "end": 23,
          "loc": SourceLocation {
            "end": Position {
              "column": 22,
              "line": 2,
            },
            "identifierName": "split",
            "indent": 0,
            "lines": Lines {
              "length": 13,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 22,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 29,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → { 'a': 1, 'b': 2 }",
                    "locked": false,
                    "sliceEnd": 23,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → [[1, 3], [2, 4]]",
                    "locked": false,
                    "sliceEnd": 21,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 17,
              "line": 2,
            },
          },
          "name": "split",
          "start": 18,
          "type": "Identifier",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 22,
            "line": 2,
          },
          "indent": 0,
          "lines": Lines {
            "length": 13,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 22,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 29,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → { 'a': 1, 'b': 2 }",
                  "locked": false,
                  "sliceEnd": 23,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → [[1, 3], [2, 4]]",
                  "locked": false,
                  "sliceEnd": 21,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 17,
            "line": 2,
          },
        },
        "local": Node {
          "__clone": [Function],
          "end": 23,
          "loc": SourceLocation {
            "end": Position {
              "column": 22,
              "line": 2,
            },
            "identifierName": "split",
            "indent": 0,
            "lines": Lines {
              "length": 13,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 22,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 29,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → { 'a': 1, 'b': 2 }",
                    "locked": false,
                    "sliceEnd": 23,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → [[1, 3], [2, 4]]",
                    "locked": false,
                    "sliceEnd": 21,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 17,
              "line": 2,
            },
          },
          "name": "split",
          "start": 18,
          "type": "Identifier",
        },
        "start": 18,
        "type": "ImportSpecifier",
      },
    ],
    "start": 1,
    "type": "ImportDeclaration",
  },
  Node {
    "end": 77,
    "importKind": "value",
    "loc": SourceLocation {
      "end": Position {
        "column": 37,
        "line": 3,
      },
      "indent": 0,
      "lines": Lines {
        "length": 13,
        "name": null,
        Symbol(recastLinesSecret): Object {
          "cachedSourceMap": null,
          "infos": Array [
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import R, { add, split } from 'ramda';",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import _, { defaults } from 'lodash';",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const num = add(2, 3);",
              "locked": false,
              "sliceEnd": 22,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arr = split('.', 'a.b.c.xyz.d');",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const str = R.toLower('XYZ');",
              "locked": false,
              "sliceEnd": 29,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// → { 'a': 1, 'b': 2 }",
              "locked": false,
              "sliceEnd": 23,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// → [[1, 3], [2, 4]]",
              "locked": false,
              "sliceEnd": 21,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
          ],
          "mappings": Array [],
          "name": null,
        },
      },
      "start": Position {
        "column": 0,
        "line": 3,
      },
    },
    "source": Node {
      "end": 76,
      "extra": Object {
        "raw": "'lodash'",
        "rawValue": "lodash",
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 36,
          "line": 3,
        },
        "indent": 0,
        "lines": Lines {
          "length": 13,
          "name": null,
          Symbol(recastLinesSecret): Object {
            "cachedSourceMap": null,
            "infos": Array [
              Object {
                "indent": 0,
                "line": "",
                "locked": false,
                "sliceEnd": 0,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "import R, { add, split } from 'ramda';",
                "locked": false,
                "sliceEnd": 38,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "import _, { defaults } from 'lodash';",
                "locked": false,
                "sliceEnd": 37,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "",
                "locked": false,
                "sliceEnd": 0,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "const num = add(2, 3);",
                "locked": false,
                "sliceEnd": 22,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "const arr = split('.', 'a.b.c.xyz.d');",
                "locked": false,
                "sliceEnd": 38,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "const str = R.toLower('XYZ');",
                "locked": false,
                "sliceEnd": 29,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "",
                "locked": false,
                "sliceEnd": 0,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                "locked": false,
                "sliceEnd": 53,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "// → { 'a': 1, 'b': 2 }",
                "locked": false,
                "sliceEnd": 23,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                "locked": false,
                "sliceEnd": 53,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "// → [[1, 3], [2, 4]]",
                "locked": false,
                "sliceEnd": 21,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "",
                "locked": false,
                "sliceEnd": 0,
                "sliceStart": 0,
              },
            ],
            "mappings": Array [],
            "name": null,
          },
        },
        "start": Position {
          "column": 28,
          "line": 3,
        },
      },
      "start": 68,
      "type": "StringLiteral",
      "value": "lodash",
    },
    "specifiers": Array [
      Node {
        "end": 48,
        "loc": SourceLocation {
          "end": Position {
            "column": 8,
            "line": 3,
          },
          "indent": 0,
          "lines": Lines {
            "length": 13,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 22,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 29,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → { 'a': 1, 'b': 2 }",
                  "locked": false,
                  "sliceEnd": 23,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → [[1, 3], [2, 4]]",
                  "locked": false,
                  "sliceEnd": 21,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 7,
            "line": 3,
          },
        },
        "local": Node {
          "end": 48,
          "loc": SourceLocation {
            "end": Position {
              "column": 8,
              "line": 3,
            },
            "identifierName": "_",
            "indent": 0,
            "lines": Lines {
              "length": 13,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 22,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 29,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → { 'a': 1, 'b': 2 }",
                    "locked": false,
                    "sliceEnd": 23,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → [[1, 3], [2, 4]]",
                    "locked": false,
                    "sliceEnd": 21,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 7,
              "line": 3,
            },
          },
          "name": "_",
          "start": 47,
          "type": "Identifier",
        },
        "start": 47,
        "type": "ImportDefaultSpecifier",
      },
      Node {
        "end": 60,
        "importKind": null,
        "imported": Node {
          "end": 60,
          "loc": SourceLocation {
            "end": Position {
              "column": 20,
              "line": 3,
            },
            "identifierName": "defaults",
            "indent": 0,
            "lines": Lines {
              "length": 13,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 22,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 29,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → { 'a': 1, 'b': 2 }",
                    "locked": false,
                    "sliceEnd": 23,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → [[1, 3], [2, 4]]",
                    "locked": false,
                    "sliceEnd": 21,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 12,
              "line": 3,
            },
          },
          "name": "defaults",
          "start": 52,
          "type": "Identifier",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 20,
            "line": 3,
          },
          "indent": 0,
          "lines": Lines {
            "length": 13,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 22,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 29,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → { 'a': 1, 'b': 2 }",
                  "locked": false,
                  "sliceEnd": 23,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → [[1, 3], [2, 4]]",
                  "locked": false,
                  "sliceEnd": 21,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 12,
            "line": 3,
          },
        },
        "local": Node {
          "__clone": [Function],
          "end": 60,
          "loc": SourceLocation {
            "end": Position {
              "column": 20,
              "line": 3,
            },
            "identifierName": "defaults",
            "indent": 0,
            "lines": Lines {
              "length": 13,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 22,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 29,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → { 'a': 1, 'b': 2 }",
                    "locked": false,
                    "sliceEnd": 23,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → [[1, 3], [2, 4]]",
                    "locked": false,
                    "sliceEnd": 21,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 12,
              "line": 3,
            },
          },
          "name": "defaults",
          "start": 52,
          "type": "Identifier",
        },
        "start": 52,
        "type": "ImportSpecifier",
      },
    ],
    "start": 40,
    "type": "ImportDeclaration",
  },
  Node {
    "declarations": Array [
      Node {
        "end": 100,
        "id": Node {
          "end": 88,
          "loc": SourceLocation {
            "end": Position {
              "column": 9,
              "line": 5,
            },
            "identifierName": "num",
            "indent": 0,
            "lines": Lines {
              "length": 13,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 22,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 29,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → { 'a': 1, 'b': 2 }",
                    "locked": false,
                    "sliceEnd": 23,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → [[1, 3], [2, 4]]",
                    "locked": false,
                    "sliceEnd": 21,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 6,
              "line": 5,
            },
          },
          "name": "num",
          "start": 85,
          "type": "Identifier",
        },
        "init": Node {
          "arguments": Array [
            Node {
              "end": 96,
              "extra": Object {
                "raw": "2",
                "rawValue": 2,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 17,
                  "line": 5,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 13,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 22,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 29,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → { 'a': 1, 'b': 2 }",
                        "locked": false,
                        "sliceEnd": 23,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → [[1, 3], [2, 4]]",
                        "locked": false,
                        "sliceEnd": 21,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 16,
                  "line": 5,
                },
              },
              "start": 95,
              "type": "NumericLiteral",
              "value": 2,
            },
            Node {
              "end": 99,
              "extra": Object {
                "raw": "3",
                "rawValue": 3,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 20,
                  "line": 5,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 13,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 22,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 29,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → { 'a': 1, 'b': 2 }",
                        "locked": false,
                        "sliceEnd": 23,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → [[1, 3], [2, 4]]",
                        "locked": false,
                        "sliceEnd": 21,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 19,
                  "line": 5,
                },
              },
              "start": 98,
              "type": "NumericLiteral",
              "value": 3,
            },
          ],
          "callee": Node {
            "end": 94,
            "loc": SourceLocation {
              "end": Position {
                "column": 15,
                "line": 5,
              },
              "identifierName": "add",
              "indent": 0,
              "lines": Lines {
                "length": 13,
                "name": null,
                Symbol(recastLinesSecret): Object {
                  "cachedSourceMap": null,
                  "infos": Array [
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import R, { add, split } from 'ramda';",
                      "locked": false,
                      "sliceEnd": 38,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import _, { defaults } from 'lodash';",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const num = add(2, 3);",
                      "locked": false,
                      "sliceEnd": 22,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arr = split('.', 'a.b.c.xyz.d');",
                      "locked": false,
                      "sliceEnd": 38,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const str = R.toLower('XYZ');",
                      "locked": false,
                      "sliceEnd": 29,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                      "locked": false,
                      "sliceEnd": 53,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "// → { 'a': 1, 'b': 2 }",
                      "locked": false,
                      "sliceEnd": 23,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                      "locked": false,
                      "sliceEnd": 53,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "// → [[1, 3], [2, 4]]",
                      "locked": false,
                      "sliceEnd": 21,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                  ],
                  "mappings": Array [],
                  "name": null,
                },
              },
              "start": Position {
                "column": 12,
                "line": 5,
              },
            },
            "name": "add",
            "start": 91,
            "type": "Identifier",
          },
          "end": 100,
          "loc": SourceLocation {
            "end": Position {
              "column": 21,
              "line": 5,
            },
            "indent": 0,
            "lines": Lines {
              "length": 13,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 22,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 29,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → { 'a': 1, 'b': 2 }",
                    "locked": false,
                    "sliceEnd": 23,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → [[1, 3], [2, 4]]",
                    "locked": false,
                    "sliceEnd": 21,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 12,
              "line": 5,
            },
          },
          "start": 91,
          "type": "CallExpression",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 21,
            "line": 5,
          },
          "indent": 0,
          "lines": Lines {
            "length": 13,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 22,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 29,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → { 'a': 1, 'b': 2 }",
                  "locked": false,
                  "sliceEnd": 23,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → [[1, 3], [2, 4]]",
                  "locked": false,
                  "sliceEnd": 21,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 6,
            "line": 5,
          },
        },
        "start": 85,
        "type": "VariableDeclarator",
      },
    ],
    "end": 101,
    "kind": "const",
    "loc": SourceLocation {
      "end": Position {
        "column": 22,
        "line": 5,
      },
      "indent": 0,
      "lines": Lines {
        "length": 13,
        "name": null,
        Symbol(recastLinesSecret): Object {
          "cachedSourceMap": null,
          "infos": Array [
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import R, { add, split } from 'ramda';",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import _, { defaults } from 'lodash';",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const num = add(2, 3);",
              "locked": false,
              "sliceEnd": 22,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arr = split('.', 'a.b.c.xyz.d');",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const str = R.toLower('XYZ');",
              "locked": false,
              "sliceEnd": 29,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// → { 'a': 1, 'b': 2 }",
              "locked": false,
              "sliceEnd": 23,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// → [[1, 3], [2, 4]]",
              "locked": false,
              "sliceEnd": 21,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
          ],
          "mappings": Array [],
          "name": null,
        },
      },
      "start": Position {
        "column": 0,
        "line": 5,
      },
    },
    "start": 79,
    "type": "VariableDeclaration",
  },
  Node {
    "declarations": Array [
      Node {
        "end": 139,
        "id": Node {
          "end": 111,
          "loc": SourceLocation {
            "end": Position {
              "column": 9,
              "line": 6,
            },
            "identifierName": "arr",
            "indent": 0,
            "lines": Lines {
              "length": 13,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 22,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 29,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → { 'a': 1, 'b': 2 }",
                    "locked": false,
                    "sliceEnd": 23,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → [[1, 3], [2, 4]]",
                    "locked": false,
                    "sliceEnd": 21,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 6,
              "line": 6,
            },
          },
          "name": "arr",
          "start": 108,
          "type": "Identifier",
        },
        "init": Node {
          "arguments": Array [
            Node {
              "end": 123,
              "extra": Object {
                "raw": "'.'",
                "rawValue": ".",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 21,
                  "line": 6,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 13,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 22,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 29,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → { 'a': 1, 'b': 2 }",
                        "locked": false,
                        "sliceEnd": 23,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → [[1, 3], [2, 4]]",
                        "locked": false,
                        "sliceEnd": 21,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 18,
                  "line": 6,
                },
              },
              "start": 120,
              "type": "StringLiteral",
              "value": ".",
            },
            Node {
              "end": 138,
              "extra": Object {
                "raw": "'a.b.c.xyz.d'",
                "rawValue": "a.b.c.xyz.d",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 36,
                  "line": 6,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 13,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 22,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 29,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → { 'a': 1, 'b': 2 }",
                        "locked": false,
                        "sliceEnd": 23,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → [[1, 3], [2, 4]]",
                        "locked": false,
                        "sliceEnd": 21,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 23,
                  "line": 6,
                },
              },
              "start": 125,
              "type": "StringLiteral",
              "value": "a.b.c.xyz.d",
            },
          ],
          "callee": Node {
            "end": 119,
            "loc": SourceLocation {
              "end": Position {
                "column": 17,
                "line": 6,
              },
              "identifierName": "split",
              "indent": 0,
              "lines": Lines {
                "length": 13,
                "name": null,
                Symbol(recastLinesSecret): Object {
                  "cachedSourceMap": null,
                  "infos": Array [
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import R, { add, split } from 'ramda';",
                      "locked": false,
                      "sliceEnd": 38,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import _, { defaults } from 'lodash';",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const num = add(2, 3);",
                      "locked": false,
                      "sliceEnd": 22,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arr = split('.', 'a.b.c.xyz.d');",
                      "locked": false,
                      "sliceEnd": 38,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const str = R.toLower('XYZ');",
                      "locked": false,
                      "sliceEnd": 29,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                      "locked": false,
                      "sliceEnd": 53,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "// → { 'a': 1, 'b': 2 }",
                      "locked": false,
                      "sliceEnd": 23,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                      "locked": false,
                      "sliceEnd": 53,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "// → [[1, 3], [2, 4]]",
                      "locked": false,
                      "sliceEnd": 21,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                  ],
                  "mappings": Array [],
                  "name": null,
                },
              },
              "start": Position {
                "column": 12,
                "line": 6,
              },
            },
            "name": "split",
            "start": 114,
            "type": "Identifier",
          },
          "end": 139,
          "loc": SourceLocation {
            "end": Position {
              "column": 37,
              "line": 6,
            },
            "indent": 0,
            "lines": Lines {
              "length": 13,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 22,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 29,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → { 'a': 1, 'b': 2 }",
                    "locked": false,
                    "sliceEnd": 23,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → [[1, 3], [2, 4]]",
                    "locked": false,
                    "sliceEnd": 21,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 12,
              "line": 6,
            },
          },
          "start": 114,
          "type": "CallExpression",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 37,
            "line": 6,
          },
          "indent": 0,
          "lines": Lines {
            "length": 13,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 22,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 29,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → { 'a': 1, 'b': 2 }",
                  "locked": false,
                  "sliceEnd": 23,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → [[1, 3], [2, 4]]",
                  "locked": false,
                  "sliceEnd": 21,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 6,
            "line": 6,
          },
        },
        "start": 108,
        "type": "VariableDeclarator",
      },
    ],
    "end": 140,
    "kind": "const",
    "loc": SourceLocation {
      "end": Position {
        "column": 38,
        "line": 6,
      },
      "indent": 0,
      "lines": Lines {
        "length": 13,
        "name": null,
        Symbol(recastLinesSecret): Object {
          "cachedSourceMap": null,
          "infos": Array [
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import R, { add, split } from 'ramda';",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import _, { defaults } from 'lodash';",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const num = add(2, 3);",
              "locked": false,
              "sliceEnd": 22,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arr = split('.', 'a.b.c.xyz.d');",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const str = R.toLower('XYZ');",
              "locked": false,
              "sliceEnd": 29,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// → { 'a': 1, 'b': 2 }",
              "locked": false,
              "sliceEnd": 23,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// → [[1, 3], [2, 4]]",
              "locked": false,
              "sliceEnd": 21,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
          ],
          "mappings": Array [],
          "name": null,
        },
      },
      "start": Position {
        "column": 0,
        "line": 6,
      },
    },
    "start": 102,
    "type": "VariableDeclaration",
  },
  Node {
    "declarations": Array [
      Node {
        "end": 169,
        "id": Node {
          "end": 150,
          "loc": SourceLocation {
            "end": Position {
              "column": 9,
              "line": 7,
            },
            "identifierName": "str",
            "indent": 0,
            "lines": Lines {
              "length": 13,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 22,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 29,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → { 'a': 1, 'b': 2 }",
                    "locked": false,
                    "sliceEnd": 23,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → [[1, 3], [2, 4]]",
                    "locked": false,
                    "sliceEnd": 21,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 6,
              "line": 7,
            },
          },
          "name": "str",
          "start": 147,
          "type": "Identifier",
        },
        "init": Node {
          "arguments": Array [
            Node {
              "end": 168,
              "extra": Object {
                "raw": "'XYZ'",
                "rawValue": "XYZ",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 27,
                  "line": 7,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 13,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 22,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 29,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → { 'a': 1, 'b': 2 }",
                        "locked": false,
                        "sliceEnd": 23,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → [[1, 3], [2, 4]]",
                        "locked": false,
                        "sliceEnd": 21,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 22,
                  "line": 7,
                },
              },
              "start": 163,
              "type": "StringLiteral",
              "value": "XYZ",
            },
          ],
          "callee": Node {
            "computed": false,
            "end": 162,
            "loc": SourceLocation {
              "end": Position {
                "column": 21,
                "line": 7,
              },
              "indent": 0,
              "lines": Lines {
                "length": 13,
                "name": null,
                Symbol(recastLinesSecret): Object {
                  "cachedSourceMap": null,
                  "infos": Array [
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import R, { add, split } from 'ramda';",
                      "locked": false,
                      "sliceEnd": 38,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import _, { defaults } from 'lodash';",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const num = add(2, 3);",
                      "locked": false,
                      "sliceEnd": 22,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arr = split('.', 'a.b.c.xyz.d');",
                      "locked": false,
                      "sliceEnd": 38,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const str = R.toLower('XYZ');",
                      "locked": false,
                      "sliceEnd": 29,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                      "locked": false,
                      "sliceEnd": 53,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "// → { 'a': 1, 'b': 2 }",
                      "locked": false,
                      "sliceEnd": 23,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                      "locked": false,
                      "sliceEnd": 53,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "// → [[1, 3], [2, 4]]",
                      "locked": false,
                      "sliceEnd": 21,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                  ],
                  "mappings": Array [],
                  "name": null,
                },
              },
              "start": Position {
                "column": 12,
                "line": 7,
              },
            },
            "object": Node {
              "end": 154,
              "loc": SourceLocation {
                "end": Position {
                  "column": 13,
                  "line": 7,
                },
                "identifierName": "R",
                "indent": 0,
                "lines": Lines {
                  "length": 13,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 22,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 29,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → { 'a': 1, 'b': 2 }",
                        "locked": false,
                        "sliceEnd": 23,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → [[1, 3], [2, 4]]",
                        "locked": false,
                        "sliceEnd": 21,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 12,
                  "line": 7,
                },
              },
              "name": "R",
              "start": 153,
              "type": "Identifier",
            },
            "property": Node {
              "end": 162,
              "loc": SourceLocation {
                "end": Position {
                  "column": 21,
                  "line": 7,
                },
                "identifierName": "toLower",
                "indent": 0,
                "lines": Lines {
                  "length": 13,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 22,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 29,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → { 'a': 1, 'b': 2 }",
                        "locked": false,
                        "sliceEnd": 23,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → [[1, 3], [2, 4]]",
                        "locked": false,
                        "sliceEnd": 21,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 14,
                  "line": 7,
                },
              },
              "name": "toLower",
              "start": 155,
              "type": "Identifier",
            },
            "start": 153,
            "type": "MemberExpression",
          },
          "end": 169,
          "loc": SourceLocation {
            "end": Position {
              "column": 28,
              "line": 7,
            },
            "indent": 0,
            "lines": Lines {
              "length": 13,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 22,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 29,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → { 'a': 1, 'b': 2 }",
                    "locked": false,
                    "sliceEnd": 23,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → [[1, 3], [2, 4]]",
                    "locked": false,
                    "sliceEnd": 21,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 12,
              "line": 7,
            },
          },
          "start": 153,
          "type": "CallExpression",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 28,
            "line": 7,
          },
          "indent": 0,
          "lines": Lines {
            "length": 13,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 22,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 29,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → { 'a': 1, 'b': 2 }",
                  "locked": false,
                  "sliceEnd": 23,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → [[1, 3], [2, 4]]",
                  "locked": false,
                  "sliceEnd": 21,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 6,
            "line": 7,
          },
        },
        "start": 147,
        "type": "VariableDeclarator",
      },
    ],
    "end": 170,
    "kind": "const",
    "loc": SourceLocation {
      "end": Position {
        "column": 29,
        "line": 7,
      },
      "indent": 0,
      "lines": Lines {
        "length": 13,
        "name": null,
        Symbol(recastLinesSecret): Object {
          "cachedSourceMap": null,
          "infos": Array [
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import R, { add, split } from 'ramda';",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import _, { defaults } from 'lodash';",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const num = add(2, 3);",
              "locked": false,
              "sliceEnd": 22,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arr = split('.', 'a.b.c.xyz.d');",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const str = R.toLower('XYZ');",
              "locked": false,
              "sliceEnd": 29,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// → { 'a': 1, 'b': 2 }",
              "locked": false,
              "sliceEnd": 23,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// → [[1, 3], [2, 4]]",
              "locked": false,
              "sliceEnd": 21,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
          ],
          "mappings": Array [],
          "name": null,
        },
      },
      "start": Position {
        "column": 0,
        "line": 7,
      },
    },
    "start": 141,
    "type": "VariableDeclaration",
  },
  Node {
    "declarations": Array [
      Node {
        "end": 224,
        "id": Node {
          "end": 181,
          "loc": SourceLocation {
            "end": Position {
              "column": 9,
              "line": 9,
            },
            "identifierName": "obj",
            "indent": 0,
            "lines": Lines {
              "length": 13,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 22,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 29,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → { 'a': 1, 'b': 2 }",
                    "locked": false,
                    "sliceEnd": 23,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → [[1, 3], [2, 4]]",
                    "locked": false,
                    "sliceEnd": 21,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 6,
              "line": 9,
            },
          },
          "name": "obj",
          "start": 178,
          "type": "Identifier",
        },
        "init": Node {
          "arguments": Array [
            Node {
              "end": 203,
              "loc": SourceLocation {
                "end": Position {
                  "column": 31,
                  "line": 9,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 13,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 22,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 29,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → { 'a': 1, 'b': 2 }",
                        "locked": false,
                        "sliceEnd": 23,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → [[1, 3], [2, 4]]",
                        "locked": false,
                        "sliceEnd": 21,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 21,
                  "line": 9,
                },
              },
              "properties": Array [
                Node {
                  "computed": false,
                  "end": 201,
                  "key": Node {
                    "end": 198,
                    "extra": Object {
                      "raw": "'a'",
                      "rawValue": "a",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 26,
                        "line": 9,
                      },
                      "indent": 0,
                      "lines": Lines {
                        "length": 13,
                        "name": null,
                        Symbol(recastLinesSecret): Object {
                          "cachedSourceMap": null,
                          "infos": Array [
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import R, { add, split } from 'ramda';",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import _, { defaults } from 'lodash';",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const num = add(2, 3);",
                              "locked": false,
                              "sliceEnd": 22,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arr = split('.', 'a.b.c.xyz.d');",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const str = R.toLower('XYZ');",
                              "locked": false,
                              "sliceEnd": 29,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// → { 'a': 1, 'b': 2 }",
                              "locked": false,
                              "sliceEnd": 23,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// → [[1, 3], [2, 4]]",
                              "locked": false,
                              "sliceEnd": 21,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                          ],
                          "mappings": Array [],
                          "name": null,
                        },
                      },
                      "start": Position {
                        "column": 23,
                        "line": 9,
                      },
                    },
                    "start": 195,
                    "type": "StringLiteral",
                    "value": "a",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 29,
                      "line": 9,
                    },
                    "indent": 0,
                    "lines": Lines {
                      "length": 13,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 22,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 29,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// → { 'a': 1, 'b': 2 }",
                            "locked": false,
                            "sliceEnd": 23,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// → [[1, 3], [2, 4]]",
                            "locked": false,
                            "sliceEnd": 21,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 23,
                      "line": 9,
                    },
                  },
                  "method": false,
                  "shorthand": false,
                  "start": 195,
                  "type": "ObjectProperty",
                  "value": Node {
                    "end": 201,
                    "extra": Object {
                      "raw": "1",
                      "rawValue": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 29,
                        "line": 9,
                      },
                      "indent": 0,
                      "lines": Lines {
                        "length": 13,
                        "name": null,
                        Symbol(recastLinesSecret): Object {
                          "cachedSourceMap": null,
                          "infos": Array [
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import R, { add, split } from 'ramda';",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import _, { defaults } from 'lodash';",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const num = add(2, 3);",
                              "locked": false,
                              "sliceEnd": 22,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arr = split('.', 'a.b.c.xyz.d');",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const str = R.toLower('XYZ');",
                              "locked": false,
                              "sliceEnd": 29,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// → { 'a': 1, 'b': 2 }",
                              "locked": false,
                              "sliceEnd": 23,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// → [[1, 3], [2, 4]]",
                              "locked": false,
                              "sliceEnd": 21,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                          ],
                          "mappings": Array [],
                          "name": null,
                        },
                      },
                      "start": Position {
                        "column": 28,
                        "line": 9,
                      },
                    },
                    "start": 200,
                    "type": "NumericLiteral",
                    "value": 1,
                  },
                },
              ],
              "start": 193,
              "type": "ObjectExpression",
            },
            Node {
              "end": 223,
              "loc": SourceLocation {
                "end": Position {
                  "column": 51,
                  "line": 9,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 13,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 22,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 29,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → { 'a': 1, 'b': 2 }",
                        "locked": false,
                        "sliceEnd": 23,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → [[1, 3], [2, 4]]",
                        "locked": false,
                        "sliceEnd": 21,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 33,
                  "line": 9,
                },
              },
              "properties": Array [
                Node {
                  "computed": false,
                  "end": 213,
                  "key": Node {
                    "end": 210,
                    "extra": Object {
                      "raw": "'a'",
                      "rawValue": "a",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 38,
                        "line": 9,
                      },
                      "indent": 0,
                      "lines": Lines {
                        "length": 13,
                        "name": null,
                        Symbol(recastLinesSecret): Object {
                          "cachedSourceMap": null,
                          "infos": Array [
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import R, { add, split } from 'ramda';",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import _, { defaults } from 'lodash';",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const num = add(2, 3);",
                              "locked": false,
                              "sliceEnd": 22,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arr = split('.', 'a.b.c.xyz.d');",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const str = R.toLower('XYZ');",
                              "locked": false,
                              "sliceEnd": 29,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// → { 'a': 1, 'b': 2 }",
                              "locked": false,
                              "sliceEnd": 23,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// → [[1, 3], [2, 4]]",
                              "locked": false,
                              "sliceEnd": 21,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                          ],
                          "mappings": Array [],
                          "name": null,
                        },
                      },
                      "start": Position {
                        "column": 35,
                        "line": 9,
                      },
                    },
                    "start": 207,
                    "type": "StringLiteral",
                    "value": "a",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 41,
                      "line": 9,
                    },
                    "indent": 0,
                    "lines": Lines {
                      "length": 13,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 22,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 29,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// → { 'a': 1, 'b': 2 }",
                            "locked": false,
                            "sliceEnd": 23,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// → [[1, 3], [2, 4]]",
                            "locked": false,
                            "sliceEnd": 21,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 35,
                      "line": 9,
                    },
                  },
                  "method": false,
                  "shorthand": false,
                  "start": 207,
                  "type": "ObjectProperty",
                  "value": Node {
                    "end": 213,
                    "extra": Object {
                      "raw": "3",
                      "rawValue": 3,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 41,
                        "line": 9,
                      },
                      "indent": 0,
                      "lines": Lines {
                        "length": 13,
                        "name": null,
                        Symbol(recastLinesSecret): Object {
                          "cachedSourceMap": null,
                          "infos": Array [
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import R, { add, split } from 'ramda';",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import _, { defaults } from 'lodash';",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const num = add(2, 3);",
                              "locked": false,
                              "sliceEnd": 22,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arr = split('.', 'a.b.c.xyz.d');",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const str = R.toLower('XYZ');",
                              "locked": false,
                              "sliceEnd": 29,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// → { 'a': 1, 'b': 2 }",
                              "locked": false,
                              "sliceEnd": 23,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// → [[1, 3], [2, 4]]",
                              "locked": false,
                              "sliceEnd": 21,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                          ],
                          "mappings": Array [],
                          "name": null,
                        },
                      },
                      "start": Position {
                        "column": 40,
                        "line": 9,
                      },
                    },
                    "start": 212,
                    "type": "NumericLiteral",
                    "value": 3,
                  },
                },
                Node {
                  "computed": false,
                  "end": 221,
                  "key": Node {
                    "end": 218,
                    "extra": Object {
                      "raw": "'b'",
                      "rawValue": "b",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 46,
                        "line": 9,
                      },
                      "indent": 0,
                      "lines": Lines {
                        "length": 13,
                        "name": null,
                        Symbol(recastLinesSecret): Object {
                          "cachedSourceMap": null,
                          "infos": Array [
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import R, { add, split } from 'ramda';",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import _, { defaults } from 'lodash';",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const num = add(2, 3);",
                              "locked": false,
                              "sliceEnd": 22,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arr = split('.', 'a.b.c.xyz.d');",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const str = R.toLower('XYZ');",
                              "locked": false,
                              "sliceEnd": 29,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// → { 'a': 1, 'b': 2 }",
                              "locked": false,
                              "sliceEnd": 23,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// → [[1, 3], [2, 4]]",
                              "locked": false,
                              "sliceEnd": 21,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                          ],
                          "mappings": Array [],
                          "name": null,
                        },
                      },
                      "start": Position {
                        "column": 43,
                        "line": 9,
                      },
                    },
                    "start": 215,
                    "type": "StringLiteral",
                    "value": "b",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 49,
                      "line": 9,
                    },
                    "indent": 0,
                    "lines": Lines {
                      "length": 13,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 22,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 29,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// → { 'a': 1, 'b': 2 }",
                            "locked": false,
                            "sliceEnd": 23,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// → [[1, 3], [2, 4]]",
                            "locked": false,
                            "sliceEnd": 21,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 43,
                      "line": 9,
                    },
                  },
                  "method": false,
                  "shorthand": false,
                  "start": 215,
                  "type": "ObjectProperty",
                  "value": Node {
                    "end": 221,
                    "extra": Object {
                      "raw": "2",
                      "rawValue": 2,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 49,
                        "line": 9,
                      },
                      "indent": 0,
                      "lines": Lines {
                        "length": 13,
                        "name": null,
                        Symbol(recastLinesSecret): Object {
                          "cachedSourceMap": null,
                          "infos": Array [
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import R, { add, split } from 'ramda';",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import _, { defaults } from 'lodash';",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const num = add(2, 3);",
                              "locked": false,
                              "sliceEnd": 22,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arr = split('.', 'a.b.c.xyz.d');",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const str = R.toLower('XYZ');",
                              "locked": false,
                              "sliceEnd": 29,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// → { 'a': 1, 'b': 2 }",
                              "locked": false,
                              "sliceEnd": 23,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// → [[1, 3], [2, 4]]",
                              "locked": false,
                              "sliceEnd": 21,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                          ],
                          "mappings": Array [],
                          "name": null,
                        },
                      },
                      "start": Position {
                        "column": 48,
                        "line": 9,
                      },
                    },
                    "start": 220,
                    "type": "NumericLiteral",
                    "value": 2,
                  },
                },
              ],
              "start": 205,
              "type": "ObjectExpression",
            },
          ],
          "callee": Node {
            "end": 192,
            "loc": SourceLocation {
              "end": Position {
                "column": 20,
                "line": 9,
              },
              "identifierName": "defaults",
              "indent": 0,
              "lines": Lines {
                "length": 13,
                "name": null,
                Symbol(recastLinesSecret): Object {
                  "cachedSourceMap": null,
                  "infos": Array [
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import R, { add, split } from 'ramda';",
                      "locked": false,
                      "sliceEnd": 38,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import _, { defaults } from 'lodash';",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const num = add(2, 3);",
                      "locked": false,
                      "sliceEnd": 22,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arr = split('.', 'a.b.c.xyz.d');",
                      "locked": false,
                      "sliceEnd": 38,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const str = R.toLower('XYZ');",
                      "locked": false,
                      "sliceEnd": 29,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                      "locked": false,
                      "sliceEnd": 53,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "// → { 'a': 1, 'b': 2 }",
                      "locked": false,
                      "sliceEnd": 23,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                      "locked": false,
                      "sliceEnd": 53,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "// → [[1, 3], [2, 4]]",
                      "locked": false,
                      "sliceEnd": 21,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                  ],
                  "mappings": Array [],
                  "name": null,
                },
              },
              "start": Position {
                "column": 12,
                "line": 9,
              },
            },
            "name": "defaults",
            "start": 184,
            "type": "Identifier",
          },
          "end": 224,
          "loc": SourceLocation {
            "end": Position {
              "column": 52,
              "line": 9,
            },
            "indent": 0,
            "lines": Lines {
              "length": 13,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 22,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 29,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → { 'a': 1, 'b': 2 }",
                    "locked": false,
                    "sliceEnd": 23,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → [[1, 3], [2, 4]]",
                    "locked": false,
                    "sliceEnd": 21,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 12,
              "line": 9,
            },
          },
          "start": 184,
          "type": "CallExpression",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 52,
            "line": 9,
          },
          "indent": 0,
          "lines": Lines {
            "length": 13,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 22,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 29,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → { 'a': 1, 'b': 2 }",
                  "locked": false,
                  "sliceEnd": 23,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → [[1, 3], [2, 4]]",
                  "locked": false,
                  "sliceEnd": 21,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 6,
            "line": 9,
          },
        },
        "start": 178,
        "type": "VariableDeclarator",
      },
    ],
    "end": 225,
    "kind": "const",
    "loc": SourceLocation {
      "end": Position {
        "column": 53,
        "line": 9,
      },
      "indent": 0,
      "lines": Lines {
        "length": 13,
        "name": null,
        Symbol(recastLinesSecret): Object {
          "cachedSourceMap": null,
          "infos": Array [
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import R, { add, split } from 'ramda';",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import _, { defaults } from 'lodash';",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const num = add(2, 3);",
              "locked": false,
              "sliceEnd": 22,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arr = split('.', 'a.b.c.xyz.d');",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const str = R.toLower('XYZ');",
              "locked": false,
              "sliceEnd": 29,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// → { 'a': 1, 'b': 2 }",
              "locked": false,
              "sliceEnd": 23,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// → [[1, 3], [2, 4]]",
              "locked": false,
              "sliceEnd": 21,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
          ],
          "mappings": Array [],
          "name": null,
        },
      },
      "start": Position {
        "column": 0,
        "line": 9,
      },
    },
    "start": 172,
    "trailingComments": Array [
      Object {
        "end": 249,
        "leading": true,
        "loc": SourceLocation {
          "end": Position {
            "column": 23,
            "line": 10,
          },
          "indent": 0,
          "lines": Lines {
            "length": 13,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 22,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 29,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → { 'a': 1, 'b': 2 }",
                  "locked": false,
                  "sliceEnd": 23,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → [[1, 3], [2, 4]]",
                  "locked": false,
                  "sliceEnd": 21,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 0,
            "line": 10,
          },
        },
        "start": 226,
        "trailing": false,
        "type": "CommentLine",
        "value": " → { 'a': 1, 'b': 2 }",
      },
    ],
    "type": "VariableDeclaration",
  },
  Node {
    "comments": Array [
      Object {
        "end": 249,
        "leading": true,
        "loc": SourceLocation {
          "end": Position {
            "column": 23,
            "line": 10,
          },
          "indent": 0,
          "lines": Lines {
            "length": 13,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 22,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 29,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → { 'a': 1, 'b': 2 }",
                  "locked": false,
                  "sliceEnd": 23,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → [[1, 3], [2, 4]]",
                  "locked": false,
                  "sliceEnd": 21,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 0,
            "line": 10,
          },
        },
        "start": 226,
        "trailing": false,
        "type": "CommentLine",
        "value": " → { 'a': 1, 'b': 2 }",
      },
      Object {
        "end": 325,
        "leading": false,
        "loc": SourceLocation {
          "end": Position {
            "column": 21,
            "line": 12,
          },
          "indent": 0,
          "lines": Lines {
            "length": 13,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 22,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 29,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → { 'a': 1, 'b': 2 }",
                  "locked": false,
                  "sliceEnd": 23,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → [[1, 3], [2, 4]]",
                  "locked": false,
                  "sliceEnd": 21,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 0,
            "line": 12,
          },
        },
        "start": 304,
        "trailing": true,
        "type": "CommentLine",
        "value": " → [[1, 3], [2, 4]]",
      },
    ],
    "declarations": Array [
      Node {
        "end": 302,
        "id": Node {
          "end": 262,
          "leadingComments": null,
          "loc": SourceLocation {
            "end": Position {
              "column": 12,
              "line": 11,
            },
            "identifierName": "arrArr",
            "indent": 0,
            "lines": Lines {
              "length": 13,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 22,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 29,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → { 'a': 1, 'b': 2 }",
                    "locked": false,
                    "sliceEnd": 23,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → [[1, 3], [2, 4]]",
                    "locked": false,
                    "sliceEnd": 21,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 6,
              "line": 11,
            },
          },
          "name": "arrArr",
          "start": 256,
          "type": "Identifier",
        },
        "init": Node {
          "arguments": Array [
            Node {
              "elements": Array [
                Node {
                  "end": 279,
                  "extra": Object {
                    "raw": "1",
                    "rawValue": 1,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 29,
                      "line": 11,
                    },
                    "indent": 0,
                    "lines": Lines {
                      "length": 13,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 22,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 29,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// → { 'a': 1, 'b': 2 }",
                            "locked": false,
                            "sliceEnd": 23,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// → [[1, 3], [2, 4]]",
                            "locked": false,
                            "sliceEnd": 21,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 28,
                      "line": 11,
                    },
                  },
                  "start": 278,
                  "type": "NumericLiteral",
                  "value": 1,
                },
                Node {
                  "end": 282,
                  "extra": Object {
                    "raw": "2",
                    "rawValue": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 32,
                      "line": 11,
                    },
                    "indent": 0,
                    "lines": Lines {
                      "length": 13,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 22,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 29,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// → { 'a': 1, 'b': 2 }",
                            "locked": false,
                            "sliceEnd": 23,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// → [[1, 3], [2, 4]]",
                            "locked": false,
                            "sliceEnd": 21,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 31,
                      "line": 11,
                    },
                  },
                  "start": 281,
                  "type": "NumericLiteral",
                  "value": 2,
                },
                Node {
                  "end": 285,
                  "extra": Object {
                    "raw": "3",
                    "rawValue": 3,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 35,
                      "line": 11,
                    },
                    "indent": 0,
                    "lines": Lines {
                      "length": 13,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 22,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 29,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// → { 'a': 1, 'b': 2 }",
                            "locked": false,
                            "sliceEnd": 23,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// → [[1, 3], [2, 4]]",
                            "locked": false,
                            "sliceEnd": 21,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 34,
                      "line": 11,
                    },
                  },
                  "start": 284,
                  "type": "NumericLiteral",
                  "value": 3,
                },
                Node {
                  "end": 288,
                  "extra": Object {
                    "raw": "4",
                    "rawValue": 4,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 38,
                      "line": 11,
                    },
                    "indent": 0,
                    "lines": Lines {
                      "length": 13,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 22,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 29,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// → { 'a': 1, 'b': 2 }",
                            "locked": false,
                            "sliceEnd": 23,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// → [[1, 3], [2, 4]]",
                            "locked": false,
                            "sliceEnd": 21,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 37,
                      "line": 11,
                    },
                  },
                  "start": 287,
                  "type": "NumericLiteral",
                  "value": 4,
                },
              ],
              "end": 289,
              "loc": SourceLocation {
                "end": Position {
                  "column": 39,
                  "line": 11,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 13,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 22,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 29,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → { 'a': 1, 'b': 2 }",
                        "locked": false,
                        "sliceEnd": 23,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → [[1, 3], [2, 4]]",
                        "locked": false,
                        "sliceEnd": 21,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 27,
                  "line": 11,
                },
              },
              "start": 277,
              "type": "ArrayExpression",
            },
            Node {
              "async": false,
              "body": Node {
                "end": 301,
                "left": Node {
                  "end": 297,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 47,
                      "line": 11,
                    },
                    "identifierName": "n",
                    "indent": 0,
                    "lines": Lines {
                      "length": 13,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 22,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 29,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// → { 'a': 1, 'b': 2 }",
                            "locked": false,
                            "sliceEnd": 23,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// → [[1, 3], [2, 4]]",
                            "locked": false,
                            "sliceEnd": 21,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 46,
                      "line": 11,
                    },
                  },
                  "name": "n",
                  "start": 296,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 51,
                    "line": 11,
                  },
                  "indent": 0,
                  "lines": Lines {
                    "length": 13,
                    "name": null,
                    Symbol(recastLinesSecret): Object {
                      "cachedSourceMap": null,
                      "infos": Array [
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "import R, { add, split } from 'ramda';",
                          "locked": false,
                          "sliceEnd": 38,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "import _, { defaults } from 'lodash';",
                          "locked": false,
                          "sliceEnd": 37,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const num = add(2, 3);",
                          "locked": false,
                          "sliceEnd": 22,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const arr = split('.', 'a.b.c.xyz.d');",
                          "locked": false,
                          "sliceEnd": 38,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const str = R.toLower('XYZ');",
                          "locked": false,
                          "sliceEnd": 29,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                          "locked": false,
                          "sliceEnd": 53,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "// → { 'a': 1, 'b': 2 }",
                          "locked": false,
                          "sliceEnd": 23,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                          "locked": false,
                          "sliceEnd": 53,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "// → [[1, 3], [2, 4]]",
                          "locked": false,
                          "sliceEnd": 21,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                      ],
                      "mappings": Array [],
                      "name": null,
                    },
                  },
                  "start": Position {
                    "column": 46,
                    "line": 11,
                  },
                },
                "operator": "%",
                "right": Node {
                  "end": 301,
                  "extra": Object {
                    "raw": "2",
                    "rawValue": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 51,
                      "line": 11,
                    },
                    "indent": 0,
                    "lines": Lines {
                      "length": 13,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 22,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 29,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// → { 'a': 1, 'b': 2 }",
                            "locked": false,
                            "sliceEnd": 23,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// → [[1, 3], [2, 4]]",
                            "locked": false,
                            "sliceEnd": 21,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 50,
                      "line": 11,
                    },
                  },
                  "start": 300,
                  "type": "NumericLiteral",
                  "value": 2,
                },
                "start": 296,
                "type": "BinaryExpression",
              },
              "end": 301,
              "expression": true,
              "generator": false,
              "id": null,
              "loc": SourceLocation {
                "end": Position {
                  "column": 51,
                  "line": 11,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 13,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 22,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 29,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → { 'a': 1, 'b': 2 }",
                        "locked": false,
                        "sliceEnd": 23,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → [[1, 3], [2, 4]]",
                        "locked": false,
                        "sliceEnd": 21,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 41,
                  "line": 11,
                },
              },
              "params": Array [
                Node {
                  "end": 292,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 42,
                      "line": 11,
                    },
                    "identifierName": "n",
                    "indent": 0,
                    "lines": Lines {
                      "length": 13,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 22,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 29,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// → { 'a': 1, 'b': 2 }",
                            "locked": false,
                            "sliceEnd": 23,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// → [[1, 3], [2, 4]]",
                            "locked": false,
                            "sliceEnd": 21,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 41,
                      "line": 11,
                    },
                  },
                  "name": "n",
                  "start": 291,
                  "type": "Identifier",
                },
              ],
              "start": 291,
              "type": "ArrowFunctionExpression",
            },
          ],
          "callee": Node {
            "computed": false,
            "end": 276,
            "loc": SourceLocation {
              "end": Position {
                "column": 26,
                "line": 11,
              },
              "indent": 0,
              "lines": Lines {
                "length": 13,
                "name": null,
                Symbol(recastLinesSecret): Object {
                  "cachedSourceMap": null,
                  "infos": Array [
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import R, { add, split } from 'ramda';",
                      "locked": false,
                      "sliceEnd": 38,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import _, { defaults } from 'lodash';",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const num = add(2, 3);",
                      "locked": false,
                      "sliceEnd": 22,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arr = split('.', 'a.b.c.xyz.d');",
                      "locked": false,
                      "sliceEnd": 38,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const str = R.toLower('XYZ');",
                      "locked": false,
                      "sliceEnd": 29,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                      "locked": false,
                      "sliceEnd": 53,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "// → { 'a': 1, 'b': 2 }",
                      "locked": false,
                      "sliceEnd": 23,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                      "locked": false,
                      "sliceEnd": 53,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "// → [[1, 3], [2, 4]]",
                      "locked": false,
                      "sliceEnd": 21,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                  ],
                  "mappings": Array [],
                  "name": null,
                },
              },
              "start": Position {
                "column": 15,
                "line": 11,
              },
            },
            "object": Node {
              "end": 266,
              "loc": SourceLocation {
                "end": Position {
                  "column": 16,
                  "line": 11,
                },
                "identifierName": "_",
                "indent": 0,
                "lines": Lines {
                  "length": 13,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 22,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 29,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → { 'a': 1, 'b': 2 }",
                        "locked": false,
                        "sliceEnd": 23,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → [[1, 3], [2, 4]]",
                        "locked": false,
                        "sliceEnd": 21,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 15,
                  "line": 11,
                },
              },
              "name": "_",
              "start": 265,
              "type": "Identifier",
            },
            "property": Node {
              "end": 276,
              "loc": SourceLocation {
                "end": Position {
                  "column": 26,
                  "line": 11,
                },
                "identifierName": "partition",
                "indent": 0,
                "lines": Lines {
                  "length": 13,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 22,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 29,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → { 'a': 1, 'b': 2 }",
                        "locked": false,
                        "sliceEnd": 23,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// → [[1, 3], [2, 4]]",
                        "locked": false,
                        "sliceEnd": 21,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 17,
                  "line": 11,
                },
              },
              "name": "partition",
              "start": 267,
              "type": "Identifier",
            },
            "start": 265,
            "type": "MemberExpression",
          },
          "end": 302,
          "loc": SourceLocation {
            "end": Position {
              "column": 52,
              "line": 11,
            },
            "indent": 0,
            "lines": Lines {
              "length": 13,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 22,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 29,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → { 'a': 1, 'b': 2 }",
                    "locked": false,
                    "sliceEnd": 23,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// → [[1, 3], [2, 4]]",
                    "locked": false,
                    "sliceEnd": 21,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 15,
              "line": 11,
            },
          },
          "start": 265,
          "type": "CallExpression",
        },
        "leadingComments": null,
        "loc": SourceLocation {
          "end": Position {
            "column": 52,
            "line": 11,
          },
          "indent": 0,
          "lines": Lines {
            "length": 13,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 22,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 29,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → { 'a': 1, 'b': 2 }",
                  "locked": false,
                  "sliceEnd": 23,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → [[1, 3], [2, 4]]",
                  "locked": false,
                  "sliceEnd": 21,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 6,
            "line": 11,
          },
        },
        "start": 256,
        "type": "VariableDeclarator",
      },
    ],
    "end": 303,
    "kind": "const",
    "leadingComments": Array [
      Object {
        "end": 249,
        "leading": true,
        "loc": SourceLocation {
          "end": Position {
            "column": 23,
            "line": 10,
          },
          "indent": 0,
          "lines": Lines {
            "length": 13,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 22,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 29,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → { 'a': 1, 'b': 2 }",
                  "locked": false,
                  "sliceEnd": 23,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → [[1, 3], [2, 4]]",
                  "locked": false,
                  "sliceEnd": 21,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 0,
            "line": 10,
          },
        },
        "start": 226,
        "trailing": false,
        "type": "CommentLine",
        "value": " → { 'a': 1, 'b': 2 }",
      },
    ],
    "loc": SourceLocation {
      "end": Position {
        "column": 53,
        "line": 11,
      },
      "indent": 0,
      "lines": Lines {
        "length": 13,
        "name": null,
        Symbol(recastLinesSecret): Object {
          "cachedSourceMap": null,
          "infos": Array [
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import R, { add, split } from 'ramda';",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import _, { defaults } from 'lodash';",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const num = add(2, 3);",
              "locked": false,
              "sliceEnd": 22,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arr = split('.', 'a.b.c.xyz.d');",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const str = R.toLower('XYZ');",
              "locked": false,
              "sliceEnd": 29,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// → { 'a': 1, 'b': 2 }",
              "locked": false,
              "sliceEnd": 23,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// → [[1, 3], [2, 4]]",
              "locked": false,
              "sliceEnd": 21,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
          ],
          "mappings": Array [],
          "name": null,
        },
      },
      "start": Position {
        "column": 0,
        "line": 11,
      },
    },
    "start": 250,
    "trailingComments": Array [
      Object {
        "end": 325,
        "leading": false,
        "loc": SourceLocation {
          "end": Position {
            "column": 21,
            "line": 12,
          },
          "indent": 0,
          "lines": Lines {
            "length": 13,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 22,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 29,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → { 'a': 1, 'b': 2 }",
                  "locked": false,
                  "sliceEnd": 23,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// → [[1, 3], [2, 4]]",
                  "locked": false,
                  "sliceEnd": 21,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 0,
            "line": 12,
          },
        },
        "start": 304,
        "trailing": true,
        "type": "CommentLine",
        "value": " → [[1, 3], [2, 4]]",
      },
    ],
    "type": "VariableDeclaration",
  },
]
`;

exports[`Babel code displayOutput 1`] = `
"
[1mUsage for 'ramda' in 1 files[22m
---------

[34mℹ[39m Using [1m1.18[22m% out of [1m255[22m available exports

[1mUsed fns (3)[22m
  - add, split, toLower

[1mUnused fns (252)[22m
  - __, addIndex, adjust, all, allPass, always, and, any, anyPass, ap, aperture, append, apply, applySpec, applyTo, ascend, assoc, assocPath, binary, bind, both, call, chain, clamp, clone, comparator, complement, compose, composeK, composeP, composeWith, concat, cond, construct, constructN, contains, converge, countBy, curry, curryN, dec, defaultTo, descend, difference, differenceWith, dissoc, dissocPath, divide, drop, dropLast, dropLastWhile, dropRepeats, dropRepeatsWith, dropWhile, either, empty, endsWith, eqBy, eqProps, equals, evolve, F, filter, find, findIndex, findLast, findLastIndex, flatten, flip, forEach, forEachObjIndexed, fromPairs, groupBy, groupWith, gt, gte, has, hasIn, hasPath, head, identical, identity, ifElse, inc, includes, indexBy, indexOf, init, innerJoin, insert, insertAll, intersection, intersperse, into, invert, invertObj, invoker, is, isEmpty, isNil, join, juxt, keys, keysIn, last, lastIndexOf, length, lens, lensIndex, lensPath, lensProp, lift, liftN, lt, lte, map, mapAccum, mapAccumRight, mapObjIndexed, match, mathMod, max, maxBy, mean, median, memoizeWith, merge, mergeAll, mergeDeepLeft, mergeDeepRight, mergeDeepWith, mergeDeepWithKey, mergeLeft, mergeRight, mergeWith, mergeWithKey, min, minBy, modulo, move, multiply, nAry, negate, none, not, nth, nthArg, o, objOf, of, omit, once, or, otherwise, over, pair, partial, partialRight, partition, path, pathEq, pathOr, pathSatisfies, pick, pickAll, pickBy, pipe, pipeK, pipeP, pipeWith, pluck, prepend, product, project, prop, propEq, propIs, propOr, props, propSatisfies, range, reduce, reduceBy, reduced, reduceRight, reduceWhile, reject, remove, repeat, replace, reverse, scan, sequence, set, slice, sort, sortBy, sortWith, splitAt, splitEvery, splitWhen, startsWith, subtract, sum, symmetricDifference, symmetricDifferenceWith, T, tail, take, takeLast, takeLastWhile, takeWhile, tap, test, then, thunkify, times, toPairs, toPairsIn, toString, toUpper, transduce, transpose, traverse, trim, tryCatch, type, unapply, unary, uncurryN, unfold, union, unionWith, uniq, uniqBy, uniqWith, unless, unnest, until, update, useWith, values, valuesIn, view, when, where, whereEq, without, xprod, zip, zipObj, zipWith
"
`;

exports[`Babel code displayOutput 2`] = `
"
[1mUsage for 'lodash' in 1 files[22m
---------

[34mℹ[39m Using [1m0.65[22m% out of [1m308[22m available exports

[1mUsed fns (2)[22m
  - defaults, partition

[1mUnused fns (306)[22m
  - _, add, after, ary, assign, assignIn, assignInWith, assignWith, at, attempt, before, bind, bindAll, bindKey, camelCase, capitalize, castArray, ceil, chain, chunk, clamp, clone, cloneDeep, cloneDeepWith, cloneWith, compact, concat, cond, conforms, conformsTo, constant, countBy, create, curry, curryRight, debounce, deburr, defaultsDeep, defaultTo, defer, delay, difference, differenceBy, differenceWith, divide, drop, dropRight, dropRightWhile, dropWhile, each, eachRight, endsWith, entries, entriesIn, eq, escape, escapeRegExp, every, extend, extendWith, fill, filter, find, findIndex, findKey, findLast, findLastIndex, findLastKey, first, flatMap, flatMapDeep, flatMapDepth, flatten, flattenDeep, flattenDepth, flip, floor, flow, flowRight, forEach, forEachRight, forIn, forInRight, forOwn, forOwnRight, fromPairs, functions, functionsIn, get, groupBy, gt, gte, has, hasIn, head, identity, includes, indexOf, initial, inRange, intersection, intersectionBy, intersectionWith, invert, invertBy, invoke, invokeMap, isArguments, isArray, isArrayBuffer, isArrayLike, isArrayLikeObject, isBoolean, isBuffer, isDate, isElement, isEmpty, isEqual, isEqualWith, isError, isFinite, isFunction, isInteger, isLength, isMap, isMatch, isMatchWith, isNaN, isNative, isNil, isNull, isNumber, isObject, isObjectLike, isPlainObject, isRegExp, isSafeInteger, isSet, isString, isSymbol, isTypedArray, isUndefined, isWeakMap, isWeakSet, iteratee, join, kebabCase, keyBy, keys, keysIn, last, lastIndexOf, lowerCase, lowerFirst, lt, lte, map, mapKeys, mapValues, matches, matchesProperty, max, maxBy, mean, meanBy, memoize, merge, mergeWith, method, methodOf, min, minBy, mixin, multiply, negate, noConflict, noop, now, nth, nthArg, omit, omitBy, once, orderBy, over, overArgs, overEvery, overSome, pad, padEnd, padStart, parseInt, partial, partialRight, pick, pickBy, property, propertyOf, pull, pullAll, pullAllBy, pullAllWith, pullAt, random, range, rangeRight, rearg, reduce, reduceRight, reject, remove, repeat, replace, rest, result, reverse, round, runInContext, sample, sampleSize, set, setWith, shuffle, size, slice, snakeCase, some, sortBy, sortedIndex, sortedIndexBy, sortedIndexOf, sortedLastIndex, sortedLastIndexBy, sortedLastIndexOf, sortedUniq, sortedUniqBy, split, spread, startCase, startsWith, stubArray, stubFalse, stubObject, stubString, stubTrue, subtract, sum, sumBy, tail, take, takeRight, takeRightWhile, takeWhile, tap, template, templateSettings, throttle, thru, times, toArray, toFinite, toInteger, toLength, toLower, toNumber, toPairs, toPairsIn, toPath, toPlainObject, toSafeInteger, toString, toUpper, transform, trim, trimEnd, trimStart, truncate, unary, unescape, union, unionBy, unionWith, uniq, uniqBy, uniqueId, uniqWith, unset, unzip, unzipWith, update, updateWith, upperCase, upperFirst, values, valuesIn, VERSION, without, words, wrap, xor, xorBy, xorWith, zip, zipObject, zipObjectDeep, zipWith
"
`;

exports[`Flow code Source to AST 1`] = `
Array [
  Node {
    "comments": Array [
      Object {
        "end": 9,
        "leading": true,
        "loc": SourceLocation {
          "end": Position {
            "column": 8,
            "line": 2,
          },
          "indent": 0,
          "lines": Lines {
            "length": 12,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// @flow",
                  "locked": false,
                  "sliceEnd": 8,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num: number = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 30,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str: string = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 75,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 83,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 0,
            "line": 2,
          },
        },
        "start": 1,
        "trailing": false,
        "type": "CommentLine",
        "value": " @flow",
      },
    ],
    "end": 48,
    "importKind": "value",
    "leadingComments": Array [
      Object {
        "end": 9,
        "leading": true,
        "loc": SourceLocation {
          "end": Position {
            "column": 8,
            "line": 2,
          },
          "indent": 0,
          "lines": Lines {
            "length": 12,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// @flow",
                  "locked": false,
                  "sliceEnd": 8,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num: number = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 30,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str: string = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 75,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 83,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 0,
            "line": 2,
          },
        },
        "start": 1,
        "trailing": false,
        "type": "CommentLine",
        "value": " @flow",
      },
    ],
    "loc": SourceLocation {
      "end": Position {
        "column": 38,
        "line": 3,
      },
      "indent": 0,
      "lines": Lines {
        "length": 12,
        "name": null,
        Symbol(recastLinesSecret): Object {
          "cachedSourceMap": null,
          "infos": Array [
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// @flow",
              "locked": false,
              "sliceEnd": 8,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import R, { add, split } from 'ramda';",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import _, { defaults } from 'lodash';",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const num: number = add(2, 3);",
              "locked": false,
              "sliceEnd": 30,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const str: string = R.toLower('XYZ');",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
              "locked": false,
              "sliceEnd": 75,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
              "locked": false,
              "sliceEnd": 83,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
          ],
          "mappings": Array [],
          "name": null,
        },
      },
      "start": Position {
        "column": 0,
        "line": 3,
      },
    },
    "source": Node {
      "end": 47,
      "extra": Object {
        "raw": "'ramda'",
        "rawValue": "ramda",
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 37,
          "line": 3,
        },
        "indent": 0,
        "lines": Lines {
          "length": 12,
          "name": null,
          Symbol(recastLinesSecret): Object {
            "cachedSourceMap": null,
            "infos": Array [
              Object {
                "indent": 0,
                "line": "",
                "locked": false,
                "sliceEnd": 0,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "// @flow",
                "locked": false,
                "sliceEnd": 8,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "import R, { add, split } from 'ramda';",
                "locked": false,
                "sliceEnd": 38,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "import _, { defaults } from 'lodash';",
                "locked": false,
                "sliceEnd": 37,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "",
                "locked": false,
                "sliceEnd": 0,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "const num: number = add(2, 3);",
                "locked": false,
                "sliceEnd": 30,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                "locked": false,
                "sliceEnd": 53,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "const str: string = R.toLower('XYZ');",
                "locked": false,
                "sliceEnd": 37,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "",
                "locked": false,
                "sliceEnd": 0,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                "locked": false,
                "sliceEnd": 75,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                "locked": false,
                "sliceEnd": 83,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "",
                "locked": false,
                "sliceEnd": 0,
                "sliceStart": 0,
              },
            ],
            "mappings": Array [],
            "name": null,
          },
        },
        "start": Position {
          "column": 30,
          "line": 3,
        },
      },
      "start": 40,
      "type": "StringLiteral",
      "value": "ramda",
    },
    "specifiers": Array [
      Node {
        "end": 18,
        "leadingComments": null,
        "loc": SourceLocation {
          "end": Position {
            "column": 8,
            "line": 3,
          },
          "indent": 0,
          "lines": Lines {
            "length": 12,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// @flow",
                  "locked": false,
                  "sliceEnd": 8,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num: number = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 30,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str: string = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 75,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 83,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 7,
            "line": 3,
          },
        },
        "local": Node {
          "end": 18,
          "leadingComments": null,
          "loc": SourceLocation {
            "end": Position {
              "column": 8,
              "line": 3,
            },
            "identifierName": "R",
            "indent": 0,
            "lines": Lines {
              "length": 12,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// @flow",
                    "locked": false,
                    "sliceEnd": 8,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num: number = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 30,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str: string = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 75,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 83,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 7,
              "line": 3,
            },
          },
          "name": "R",
          "start": 17,
          "type": "Identifier",
        },
        "start": 17,
        "type": "ImportDefaultSpecifier",
      },
      Node {
        "end": 25,
        "importKind": null,
        "imported": Node {
          "end": 25,
          "loc": SourceLocation {
            "end": Position {
              "column": 15,
              "line": 3,
            },
            "identifierName": "add",
            "indent": 0,
            "lines": Lines {
              "length": 12,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// @flow",
                    "locked": false,
                    "sliceEnd": 8,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num: number = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 30,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str: string = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 75,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 83,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 12,
              "line": 3,
            },
          },
          "name": "add",
          "start": 22,
          "type": "Identifier",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 15,
            "line": 3,
          },
          "indent": 0,
          "lines": Lines {
            "length": 12,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// @flow",
                  "locked": false,
                  "sliceEnd": 8,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num: number = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 30,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str: string = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 75,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 83,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 12,
            "line": 3,
          },
        },
        "local": Node {
          "__clone": [Function],
          "end": 25,
          "loc": SourceLocation {
            "end": Position {
              "column": 15,
              "line": 3,
            },
            "identifierName": "add",
            "indent": 0,
            "lines": Lines {
              "length": 12,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// @flow",
                    "locked": false,
                    "sliceEnd": 8,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num: number = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 30,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str: string = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 75,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 83,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 12,
              "line": 3,
            },
          },
          "name": "add",
          "start": 22,
          "type": "Identifier",
        },
        "start": 22,
        "type": "ImportSpecifier",
      },
      Node {
        "end": 32,
        "importKind": null,
        "imported": Node {
          "end": 32,
          "loc": SourceLocation {
            "end": Position {
              "column": 22,
              "line": 3,
            },
            "identifierName": "split",
            "indent": 0,
            "lines": Lines {
              "length": 12,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// @flow",
                    "locked": false,
                    "sliceEnd": 8,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num: number = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 30,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str: string = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 75,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 83,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 17,
              "line": 3,
            },
          },
          "name": "split",
          "start": 27,
          "type": "Identifier",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 22,
            "line": 3,
          },
          "indent": 0,
          "lines": Lines {
            "length": 12,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// @flow",
                  "locked": false,
                  "sliceEnd": 8,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num: number = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 30,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str: string = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 75,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 83,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 17,
            "line": 3,
          },
        },
        "local": Node {
          "__clone": [Function],
          "end": 32,
          "loc": SourceLocation {
            "end": Position {
              "column": 22,
              "line": 3,
            },
            "identifierName": "split",
            "indent": 0,
            "lines": Lines {
              "length": 12,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// @flow",
                    "locked": false,
                    "sliceEnd": 8,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num: number = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 30,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str: string = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 75,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 83,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 17,
              "line": 3,
            },
          },
          "name": "split",
          "start": 27,
          "type": "Identifier",
        },
        "start": 27,
        "type": "ImportSpecifier",
      },
    ],
    "start": 10,
    "type": "ImportDeclaration",
  },
  Node {
    "end": 86,
    "importKind": "value",
    "loc": SourceLocation {
      "end": Position {
        "column": 37,
        "line": 4,
      },
      "indent": 0,
      "lines": Lines {
        "length": 12,
        "name": null,
        Symbol(recastLinesSecret): Object {
          "cachedSourceMap": null,
          "infos": Array [
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// @flow",
              "locked": false,
              "sliceEnd": 8,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import R, { add, split } from 'ramda';",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import _, { defaults } from 'lodash';",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const num: number = add(2, 3);",
              "locked": false,
              "sliceEnd": 30,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const str: string = R.toLower('XYZ');",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
              "locked": false,
              "sliceEnd": 75,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
              "locked": false,
              "sliceEnd": 83,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
          ],
          "mappings": Array [],
          "name": null,
        },
      },
      "start": Position {
        "column": 0,
        "line": 4,
      },
    },
    "source": Node {
      "end": 85,
      "extra": Object {
        "raw": "'lodash'",
        "rawValue": "lodash",
      },
      "loc": SourceLocation {
        "end": Position {
          "column": 36,
          "line": 4,
        },
        "indent": 0,
        "lines": Lines {
          "length": 12,
          "name": null,
          Symbol(recastLinesSecret): Object {
            "cachedSourceMap": null,
            "infos": Array [
              Object {
                "indent": 0,
                "line": "",
                "locked": false,
                "sliceEnd": 0,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "// @flow",
                "locked": false,
                "sliceEnd": 8,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "import R, { add, split } from 'ramda';",
                "locked": false,
                "sliceEnd": 38,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "import _, { defaults } from 'lodash';",
                "locked": false,
                "sliceEnd": 37,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "",
                "locked": false,
                "sliceEnd": 0,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "const num: number = add(2, 3);",
                "locked": false,
                "sliceEnd": 30,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                "locked": false,
                "sliceEnd": 53,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "const str: string = R.toLower('XYZ');",
                "locked": false,
                "sliceEnd": 37,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "",
                "locked": false,
                "sliceEnd": 0,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                "locked": false,
                "sliceEnd": 75,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                "locked": false,
                "sliceEnd": 83,
                "sliceStart": 0,
              },
              Object {
                "indent": 0,
                "line": "",
                "locked": false,
                "sliceEnd": 0,
                "sliceStart": 0,
              },
            ],
            "mappings": Array [],
            "name": null,
          },
        },
        "start": Position {
          "column": 28,
          "line": 4,
        },
      },
      "start": 77,
      "type": "StringLiteral",
      "value": "lodash",
    },
    "specifiers": Array [
      Node {
        "end": 57,
        "loc": SourceLocation {
          "end": Position {
            "column": 8,
            "line": 4,
          },
          "indent": 0,
          "lines": Lines {
            "length": 12,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// @flow",
                  "locked": false,
                  "sliceEnd": 8,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num: number = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 30,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str: string = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 75,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 83,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 7,
            "line": 4,
          },
        },
        "local": Node {
          "end": 57,
          "loc": SourceLocation {
            "end": Position {
              "column": 8,
              "line": 4,
            },
            "identifierName": "_",
            "indent": 0,
            "lines": Lines {
              "length": 12,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// @flow",
                    "locked": false,
                    "sliceEnd": 8,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num: number = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 30,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str: string = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 75,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 83,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 7,
              "line": 4,
            },
          },
          "name": "_",
          "start": 56,
          "type": "Identifier",
        },
        "start": 56,
        "type": "ImportDefaultSpecifier",
      },
      Node {
        "end": 69,
        "importKind": null,
        "imported": Node {
          "end": 69,
          "loc": SourceLocation {
            "end": Position {
              "column": 20,
              "line": 4,
            },
            "identifierName": "defaults",
            "indent": 0,
            "lines": Lines {
              "length": 12,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// @flow",
                    "locked": false,
                    "sliceEnd": 8,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num: number = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 30,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str: string = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 75,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 83,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 12,
              "line": 4,
            },
          },
          "name": "defaults",
          "start": 61,
          "type": "Identifier",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 20,
            "line": 4,
          },
          "indent": 0,
          "lines": Lines {
            "length": 12,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// @flow",
                  "locked": false,
                  "sliceEnd": 8,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num: number = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 30,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str: string = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 75,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 83,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 12,
            "line": 4,
          },
        },
        "local": Node {
          "__clone": [Function],
          "end": 69,
          "loc": SourceLocation {
            "end": Position {
              "column": 20,
              "line": 4,
            },
            "identifierName": "defaults",
            "indent": 0,
            "lines": Lines {
              "length": 12,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// @flow",
                    "locked": false,
                    "sliceEnd": 8,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num: number = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 30,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str: string = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 75,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 83,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 12,
              "line": 4,
            },
          },
          "name": "defaults",
          "start": 61,
          "type": "Identifier",
        },
        "start": 61,
        "type": "ImportSpecifier",
      },
    ],
    "start": 49,
    "type": "ImportDeclaration",
  },
  Node {
    "declarations": Array [
      Node {
        "end": 117,
        "id": Node {
          "end": 105,
          "loc": SourceLocation {
            "end": Position {
              "column": 17,
              "line": 6,
            },
            "identifierName": "num",
            "indent": 0,
            "lines": Lines {
              "length": 12,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// @flow",
                    "locked": false,
                    "sliceEnd": 8,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num: number = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 30,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str: string = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 75,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 83,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 6,
              "line": 6,
            },
          },
          "name": "num",
          "start": 94,
          "type": "Identifier",
          "typeAnnotation": Node {
            "end": 105,
            "loc": SourceLocation {
              "end": Position {
                "column": 17,
                "line": 6,
              },
              "indent": 0,
              "lines": Lines {
                "length": 12,
                "name": null,
                Symbol(recastLinesSecret): Object {
                  "cachedSourceMap": null,
                  "infos": Array [
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "// @flow",
                      "locked": false,
                      "sliceEnd": 8,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import R, { add, split } from 'ramda';",
                      "locked": false,
                      "sliceEnd": 38,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import _, { defaults } from 'lodash';",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const num: number = add(2, 3);",
                      "locked": false,
                      "sliceEnd": 30,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                      "locked": false,
                      "sliceEnd": 53,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const str: string = R.toLower('XYZ');",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                      "locked": false,
                      "sliceEnd": 75,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                      "locked": false,
                      "sliceEnd": 83,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                  ],
                  "mappings": Array [],
                  "name": null,
                },
              },
              "start": Position {
                "column": 9,
                "line": 6,
              },
            },
            "start": 97,
            "type": "TypeAnnotation",
            "typeAnnotation": Node {
              "end": 105,
              "loc": SourceLocation {
                "end": Position {
                  "column": 17,
                  "line": 6,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 12,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// @flow",
                        "locked": false,
                        "sliceEnd": 8,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num: number = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 30,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str: string = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 75,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 83,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 11,
                  "line": 6,
                },
              },
              "start": 99,
              "type": "NumberTypeAnnotation",
            },
          },
        },
        "init": Node {
          "arguments": Array [
            Node {
              "end": 113,
              "extra": Object {
                "raw": "2",
                "rawValue": 2,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 25,
                  "line": 6,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 12,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// @flow",
                        "locked": false,
                        "sliceEnd": 8,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num: number = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 30,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str: string = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 75,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 83,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 24,
                  "line": 6,
                },
              },
              "start": 112,
              "type": "NumericLiteral",
              "value": 2,
            },
            Node {
              "end": 116,
              "extra": Object {
                "raw": "3",
                "rawValue": 3,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 28,
                  "line": 6,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 12,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// @flow",
                        "locked": false,
                        "sliceEnd": 8,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num: number = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 30,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str: string = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 75,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 83,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 27,
                  "line": 6,
                },
              },
              "start": 115,
              "type": "NumericLiteral",
              "value": 3,
            },
          ],
          "callee": Node {
            "end": 111,
            "loc": SourceLocation {
              "end": Position {
                "column": 23,
                "line": 6,
              },
              "identifierName": "add",
              "indent": 0,
              "lines": Lines {
                "length": 12,
                "name": null,
                Symbol(recastLinesSecret): Object {
                  "cachedSourceMap": null,
                  "infos": Array [
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "// @flow",
                      "locked": false,
                      "sliceEnd": 8,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import R, { add, split } from 'ramda';",
                      "locked": false,
                      "sliceEnd": 38,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import _, { defaults } from 'lodash';",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const num: number = add(2, 3);",
                      "locked": false,
                      "sliceEnd": 30,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                      "locked": false,
                      "sliceEnd": 53,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const str: string = R.toLower('XYZ');",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                      "locked": false,
                      "sliceEnd": 75,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                      "locked": false,
                      "sliceEnd": 83,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                  ],
                  "mappings": Array [],
                  "name": null,
                },
              },
              "start": Position {
                "column": 20,
                "line": 6,
              },
            },
            "name": "add",
            "start": 108,
            "type": "Identifier",
          },
          "end": 117,
          "loc": SourceLocation {
            "end": Position {
              "column": 29,
              "line": 6,
            },
            "indent": 0,
            "lines": Lines {
              "length": 12,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// @flow",
                    "locked": false,
                    "sliceEnd": 8,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num: number = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 30,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str: string = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 75,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 83,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 20,
              "line": 6,
            },
          },
          "start": 108,
          "type": "CallExpression",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 29,
            "line": 6,
          },
          "indent": 0,
          "lines": Lines {
            "length": 12,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// @flow",
                  "locked": false,
                  "sliceEnd": 8,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num: number = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 30,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str: string = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 75,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 83,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 6,
            "line": 6,
          },
        },
        "start": 94,
        "type": "VariableDeclarator",
      },
    ],
    "end": 118,
    "kind": "const",
    "loc": SourceLocation {
      "end": Position {
        "column": 30,
        "line": 6,
      },
      "indent": 0,
      "lines": Lines {
        "length": 12,
        "name": null,
        Symbol(recastLinesSecret): Object {
          "cachedSourceMap": null,
          "infos": Array [
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// @flow",
              "locked": false,
              "sliceEnd": 8,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import R, { add, split } from 'ramda';",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import _, { defaults } from 'lodash';",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const num: number = add(2, 3);",
              "locked": false,
              "sliceEnd": 30,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const str: string = R.toLower('XYZ');",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
              "locked": false,
              "sliceEnd": 75,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
              "locked": false,
              "sliceEnd": 83,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
          ],
          "mappings": Array [],
          "name": null,
        },
      },
      "start": Position {
        "column": 0,
        "line": 6,
      },
    },
    "start": 88,
    "type": "VariableDeclaration",
  },
  Node {
    "declarations": Array [
      Node {
        "end": 171,
        "id": Node {
          "end": 143,
          "loc": SourceLocation {
            "end": Position {
              "column": 24,
              "line": 7,
            },
            "identifierName": "arr",
            "indent": 0,
            "lines": Lines {
              "length": 12,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// @flow",
                    "locked": false,
                    "sliceEnd": 8,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num: number = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 30,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str: string = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 75,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 83,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 6,
              "line": 7,
            },
          },
          "name": "arr",
          "start": 125,
          "type": "Identifier",
          "typeAnnotation": Node {
            "end": 143,
            "loc": SourceLocation {
              "end": Position {
                "column": 24,
                "line": 7,
              },
              "indent": 0,
              "lines": Lines {
                "length": 12,
                "name": null,
                Symbol(recastLinesSecret): Object {
                  "cachedSourceMap": null,
                  "infos": Array [
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "// @flow",
                      "locked": false,
                      "sliceEnd": 8,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import R, { add, split } from 'ramda';",
                      "locked": false,
                      "sliceEnd": 38,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import _, { defaults } from 'lodash';",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const num: number = add(2, 3);",
                      "locked": false,
                      "sliceEnd": 30,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                      "locked": false,
                      "sliceEnd": 53,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const str: string = R.toLower('XYZ');",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                      "locked": false,
                      "sliceEnd": 75,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                      "locked": false,
                      "sliceEnd": 83,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                  ],
                  "mappings": Array [],
                  "name": null,
                },
              },
              "start": Position {
                "column": 9,
                "line": 7,
              },
            },
            "start": 128,
            "type": "TypeAnnotation",
            "typeAnnotation": Node {
              "end": 143,
              "id": Node {
                "end": 135,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 7,
                  },
                  "identifierName": "Array",
                  "indent": 0,
                  "lines": Lines {
                    "length": 12,
                    "name": null,
                    Symbol(recastLinesSecret): Object {
                      "cachedSourceMap": null,
                      "infos": Array [
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "// @flow",
                          "locked": false,
                          "sliceEnd": 8,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "import R, { add, split } from 'ramda';",
                          "locked": false,
                          "sliceEnd": 38,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "import _, { defaults } from 'lodash';",
                          "locked": false,
                          "sliceEnd": 37,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const num: number = add(2, 3);",
                          "locked": false,
                          "sliceEnd": 30,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                          "locked": false,
                          "sliceEnd": 53,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const str: string = R.toLower('XYZ');",
                          "locked": false,
                          "sliceEnd": 37,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                          "locked": false,
                          "sliceEnd": 75,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                          "locked": false,
                          "sliceEnd": 83,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                      ],
                      "mappings": Array [],
                      "name": null,
                    },
                  },
                  "start": Position {
                    "column": 11,
                    "line": 7,
                  },
                },
                "name": "Array",
                "start": 130,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 24,
                  "line": 7,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 12,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// @flow",
                        "locked": false,
                        "sliceEnd": 8,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num: number = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 30,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str: string = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 75,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 83,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 11,
                  "line": 7,
                },
              },
              "start": 130,
              "type": "GenericTypeAnnotation",
              "typeParameters": Node {
                "end": 143,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 24,
                    "line": 7,
                  },
                  "indent": 0,
                  "lines": Lines {
                    "length": 12,
                    "name": null,
                    Symbol(recastLinesSecret): Object {
                      "cachedSourceMap": null,
                      "infos": Array [
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "// @flow",
                          "locked": false,
                          "sliceEnd": 8,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "import R, { add, split } from 'ramda';",
                          "locked": false,
                          "sliceEnd": 38,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "import _, { defaults } from 'lodash';",
                          "locked": false,
                          "sliceEnd": 37,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const num: number = add(2, 3);",
                          "locked": false,
                          "sliceEnd": 30,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                          "locked": false,
                          "sliceEnd": 53,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const str: string = R.toLower('XYZ');",
                          "locked": false,
                          "sliceEnd": 37,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                          "locked": false,
                          "sliceEnd": 75,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                          "locked": false,
                          "sliceEnd": 83,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                      ],
                      "mappings": Array [],
                      "name": null,
                    },
                  },
                  "start": Position {
                    "column": 16,
                    "line": 7,
                  },
                },
                "params": Array [
                  Node {
                    "end": 142,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 23,
                        "line": 7,
                      },
                      "indent": 0,
                      "lines": Lines {
                        "length": 12,
                        "name": null,
                        Symbol(recastLinesSecret): Object {
                          "cachedSourceMap": null,
                          "infos": Array [
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// @flow",
                              "locked": false,
                              "sliceEnd": 8,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import R, { add, split } from 'ramda';",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import _, { defaults } from 'lodash';",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const num: number = add(2, 3);",
                              "locked": false,
                              "sliceEnd": 30,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const str: string = R.toLower('XYZ');",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                              "locked": false,
                              "sliceEnd": 75,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                              "locked": false,
                              "sliceEnd": 83,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                          ],
                          "mappings": Array [],
                          "name": null,
                        },
                      },
                      "start": Position {
                        "column": 17,
                        "line": 7,
                      },
                    },
                    "start": 136,
                    "type": "StringTypeAnnotation",
                  },
                ],
                "start": 135,
                "type": "TypeParameterInstantiation",
              },
            },
          },
        },
        "init": Node {
          "arguments": Array [
            Node {
              "end": 155,
              "extra": Object {
                "raw": "'.'",
                "rawValue": ".",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 36,
                  "line": 7,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 12,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// @flow",
                        "locked": false,
                        "sliceEnd": 8,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num: number = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 30,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str: string = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 75,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 83,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 33,
                  "line": 7,
                },
              },
              "start": 152,
              "type": "StringLiteral",
              "value": ".",
            },
            Node {
              "end": 170,
              "extra": Object {
                "raw": "'a.b.c.xyz.d'",
                "rawValue": "a.b.c.xyz.d",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 51,
                  "line": 7,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 12,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// @flow",
                        "locked": false,
                        "sliceEnd": 8,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num: number = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 30,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str: string = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 75,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 83,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 38,
                  "line": 7,
                },
              },
              "start": 157,
              "type": "StringLiteral",
              "value": "a.b.c.xyz.d",
            },
          ],
          "callee": Node {
            "end": 151,
            "loc": SourceLocation {
              "end": Position {
                "column": 32,
                "line": 7,
              },
              "identifierName": "split",
              "indent": 0,
              "lines": Lines {
                "length": 12,
                "name": null,
                Symbol(recastLinesSecret): Object {
                  "cachedSourceMap": null,
                  "infos": Array [
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "// @flow",
                      "locked": false,
                      "sliceEnd": 8,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import R, { add, split } from 'ramda';",
                      "locked": false,
                      "sliceEnd": 38,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import _, { defaults } from 'lodash';",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const num: number = add(2, 3);",
                      "locked": false,
                      "sliceEnd": 30,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                      "locked": false,
                      "sliceEnd": 53,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const str: string = R.toLower('XYZ');",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                      "locked": false,
                      "sliceEnd": 75,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                      "locked": false,
                      "sliceEnd": 83,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                  ],
                  "mappings": Array [],
                  "name": null,
                },
              },
              "start": Position {
                "column": 27,
                "line": 7,
              },
            },
            "name": "split",
            "start": 146,
            "type": "Identifier",
          },
          "end": 171,
          "loc": SourceLocation {
            "end": Position {
              "column": 52,
              "line": 7,
            },
            "indent": 0,
            "lines": Lines {
              "length": 12,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// @flow",
                    "locked": false,
                    "sliceEnd": 8,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num: number = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 30,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str: string = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 75,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 83,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 27,
              "line": 7,
            },
          },
          "start": 146,
          "type": "CallExpression",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 52,
            "line": 7,
          },
          "indent": 0,
          "lines": Lines {
            "length": 12,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// @flow",
                  "locked": false,
                  "sliceEnd": 8,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num: number = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 30,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str: string = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 75,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 83,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 6,
            "line": 7,
          },
        },
        "start": 125,
        "type": "VariableDeclarator",
      },
    ],
    "end": 172,
    "kind": "const",
    "loc": SourceLocation {
      "end": Position {
        "column": 53,
        "line": 7,
      },
      "indent": 0,
      "lines": Lines {
        "length": 12,
        "name": null,
        Symbol(recastLinesSecret): Object {
          "cachedSourceMap": null,
          "infos": Array [
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// @flow",
              "locked": false,
              "sliceEnd": 8,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import R, { add, split } from 'ramda';",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import _, { defaults } from 'lodash';",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const num: number = add(2, 3);",
              "locked": false,
              "sliceEnd": 30,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const str: string = R.toLower('XYZ');",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
              "locked": false,
              "sliceEnd": 75,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
              "locked": false,
              "sliceEnd": 83,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
          ],
          "mappings": Array [],
          "name": null,
        },
      },
      "start": Position {
        "column": 0,
        "line": 7,
      },
    },
    "start": 119,
    "type": "VariableDeclaration",
  },
  Node {
    "declarations": Array [
      Node {
        "end": 209,
        "id": Node {
          "end": 190,
          "loc": SourceLocation {
            "end": Position {
              "column": 17,
              "line": 8,
            },
            "identifierName": "str",
            "indent": 0,
            "lines": Lines {
              "length": 12,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// @flow",
                    "locked": false,
                    "sliceEnd": 8,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num: number = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 30,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str: string = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 75,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 83,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 6,
              "line": 8,
            },
          },
          "name": "str",
          "start": 179,
          "type": "Identifier",
          "typeAnnotation": Node {
            "end": 190,
            "loc": SourceLocation {
              "end": Position {
                "column": 17,
                "line": 8,
              },
              "indent": 0,
              "lines": Lines {
                "length": 12,
                "name": null,
                Symbol(recastLinesSecret): Object {
                  "cachedSourceMap": null,
                  "infos": Array [
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "// @flow",
                      "locked": false,
                      "sliceEnd": 8,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import R, { add, split } from 'ramda';",
                      "locked": false,
                      "sliceEnd": 38,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import _, { defaults } from 'lodash';",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const num: number = add(2, 3);",
                      "locked": false,
                      "sliceEnd": 30,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                      "locked": false,
                      "sliceEnd": 53,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const str: string = R.toLower('XYZ');",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                      "locked": false,
                      "sliceEnd": 75,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                      "locked": false,
                      "sliceEnd": 83,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                  ],
                  "mappings": Array [],
                  "name": null,
                },
              },
              "start": Position {
                "column": 9,
                "line": 8,
              },
            },
            "start": 182,
            "type": "TypeAnnotation",
            "typeAnnotation": Node {
              "end": 190,
              "loc": SourceLocation {
                "end": Position {
                  "column": 17,
                  "line": 8,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 12,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// @flow",
                        "locked": false,
                        "sliceEnd": 8,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num: number = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 30,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str: string = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 75,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 83,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 11,
                  "line": 8,
                },
              },
              "start": 184,
              "type": "StringTypeAnnotation",
            },
          },
        },
        "init": Node {
          "arguments": Array [
            Node {
              "end": 208,
              "extra": Object {
                "raw": "'XYZ'",
                "rawValue": "XYZ",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 35,
                  "line": 8,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 12,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// @flow",
                        "locked": false,
                        "sliceEnd": 8,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num: number = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 30,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str: string = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 75,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 83,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 30,
                  "line": 8,
                },
              },
              "start": 203,
              "type": "StringLiteral",
              "value": "XYZ",
            },
          ],
          "callee": Node {
            "computed": false,
            "end": 202,
            "loc": SourceLocation {
              "end": Position {
                "column": 29,
                "line": 8,
              },
              "indent": 0,
              "lines": Lines {
                "length": 12,
                "name": null,
                Symbol(recastLinesSecret): Object {
                  "cachedSourceMap": null,
                  "infos": Array [
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "// @flow",
                      "locked": false,
                      "sliceEnd": 8,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import R, { add, split } from 'ramda';",
                      "locked": false,
                      "sliceEnd": 38,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import _, { defaults } from 'lodash';",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const num: number = add(2, 3);",
                      "locked": false,
                      "sliceEnd": 30,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                      "locked": false,
                      "sliceEnd": 53,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const str: string = R.toLower('XYZ');",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                      "locked": false,
                      "sliceEnd": 75,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                      "locked": false,
                      "sliceEnd": 83,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                  ],
                  "mappings": Array [],
                  "name": null,
                },
              },
              "start": Position {
                "column": 20,
                "line": 8,
              },
            },
            "object": Node {
              "end": 194,
              "loc": SourceLocation {
                "end": Position {
                  "column": 21,
                  "line": 8,
                },
                "identifierName": "R",
                "indent": 0,
                "lines": Lines {
                  "length": 12,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// @flow",
                        "locked": false,
                        "sliceEnd": 8,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num: number = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 30,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str: string = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 75,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 83,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 20,
                  "line": 8,
                },
              },
              "name": "R",
              "start": 193,
              "type": "Identifier",
            },
            "property": Node {
              "end": 202,
              "loc": SourceLocation {
                "end": Position {
                  "column": 29,
                  "line": 8,
                },
                "identifierName": "toLower",
                "indent": 0,
                "lines": Lines {
                  "length": 12,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// @flow",
                        "locked": false,
                        "sliceEnd": 8,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num: number = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 30,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str: string = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 75,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 83,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 22,
                  "line": 8,
                },
              },
              "name": "toLower",
              "start": 195,
              "type": "Identifier",
            },
            "start": 193,
            "type": "MemberExpression",
          },
          "end": 209,
          "loc": SourceLocation {
            "end": Position {
              "column": 36,
              "line": 8,
            },
            "indent": 0,
            "lines": Lines {
              "length": 12,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// @flow",
                    "locked": false,
                    "sliceEnd": 8,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num: number = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 30,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str: string = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 75,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 83,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 20,
              "line": 8,
            },
          },
          "start": 193,
          "type": "CallExpression",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 36,
            "line": 8,
          },
          "indent": 0,
          "lines": Lines {
            "length": 12,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// @flow",
                  "locked": false,
                  "sliceEnd": 8,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num: number = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 30,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str: string = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 75,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 83,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 6,
            "line": 8,
          },
        },
        "start": 179,
        "type": "VariableDeclarator",
      },
    ],
    "end": 210,
    "kind": "const",
    "loc": SourceLocation {
      "end": Position {
        "column": 37,
        "line": 8,
      },
      "indent": 0,
      "lines": Lines {
        "length": 12,
        "name": null,
        Symbol(recastLinesSecret): Object {
          "cachedSourceMap": null,
          "infos": Array [
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// @flow",
              "locked": false,
              "sliceEnd": 8,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import R, { add, split } from 'ramda';",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import _, { defaults } from 'lodash';",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const num: number = add(2, 3);",
              "locked": false,
              "sliceEnd": 30,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const str: string = R.toLower('XYZ');",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
              "locked": false,
              "sliceEnd": 75,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
              "locked": false,
              "sliceEnd": 83,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
          ],
          "mappings": Array [],
          "name": null,
        },
      },
      "start": Position {
        "column": 0,
        "line": 8,
      },
    },
    "start": 173,
    "type": "VariableDeclaration",
  },
  Node {
    "declarations": Array [
      Node {
        "end": 286,
        "id": Node {
          "end": 243,
          "loc": SourceLocation {
            "end": Position {
              "column": 31,
              "line": 10,
            },
            "identifierName": "obj",
            "indent": 0,
            "lines": Lines {
              "length": 12,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// @flow",
                    "locked": false,
                    "sliceEnd": 8,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num: number = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 30,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str: string = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 75,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 83,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 6,
              "line": 10,
            },
          },
          "name": "obj",
          "start": 218,
          "type": "Identifier",
          "typeAnnotation": Node {
            "end": 243,
            "loc": SourceLocation {
              "end": Position {
                "column": 31,
                "line": 10,
              },
              "indent": 0,
              "lines": Lines {
                "length": 12,
                "name": null,
                Symbol(recastLinesSecret): Object {
                  "cachedSourceMap": null,
                  "infos": Array [
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "// @flow",
                      "locked": false,
                      "sliceEnd": 8,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import R, { add, split } from 'ramda';",
                      "locked": false,
                      "sliceEnd": 38,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import _, { defaults } from 'lodash';",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const num: number = add(2, 3);",
                      "locked": false,
                      "sliceEnd": 30,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                      "locked": false,
                      "sliceEnd": 53,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const str: string = R.toLower('XYZ');",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                      "locked": false,
                      "sliceEnd": 75,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                      "locked": false,
                      "sliceEnd": 83,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                  ],
                  "mappings": Array [],
                  "name": null,
                },
              },
              "start": Position {
                "column": 9,
                "line": 10,
              },
            },
            "start": 221,
            "type": "TypeAnnotation",
            "typeAnnotation": Node {
              "callProperties": Array [],
              "end": 243,
              "exact": false,
              "indexers": Array [
                Node {
                  "end": 241,
                  "id": null,
                  "key": Node {
                    "end": 232,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 20,
                        "line": 10,
                      },
                      "indent": 0,
                      "lines": Lines {
                        "length": 12,
                        "name": null,
                        Symbol(recastLinesSecret): Object {
                          "cachedSourceMap": null,
                          "infos": Array [
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// @flow",
                              "locked": false,
                              "sliceEnd": 8,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import R, { add, split } from 'ramda';",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import _, { defaults } from 'lodash';",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const num: number = add(2, 3);",
                              "locked": false,
                              "sliceEnd": 30,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const str: string = R.toLower('XYZ');",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                              "locked": false,
                              "sliceEnd": 75,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                              "locked": false,
                              "sliceEnd": 83,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                          ],
                          "mappings": Array [],
                          "name": null,
                        },
                      },
                      "start": Position {
                        "column": 14,
                        "line": 10,
                      },
                    },
                    "start": 226,
                    "type": "StringTypeAnnotation",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 29,
                      "line": 10,
                    },
                    "indent": 0,
                    "lines": Lines {
                      "length": 12,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// @flow",
                            "locked": false,
                            "sliceEnd": 8,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num: number = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 30,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str: string = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 75,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 83,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 13,
                      "line": 10,
                    },
                  },
                  "start": 225,
                  "static": false,
                  "type": "ObjectTypeIndexer",
                  "value": Node {
                    "end": 241,
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 29,
                        "line": 10,
                      },
                      "indent": 0,
                      "lines": Lines {
                        "length": 12,
                        "name": null,
                        Symbol(recastLinesSecret): Object {
                          "cachedSourceMap": null,
                          "infos": Array [
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// @flow",
                              "locked": false,
                              "sliceEnd": 8,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import R, { add, split } from 'ramda';",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import _, { defaults } from 'lodash';",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const num: number = add(2, 3);",
                              "locked": false,
                              "sliceEnd": 30,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const str: string = R.toLower('XYZ');",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                              "locked": false,
                              "sliceEnd": 75,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                              "locked": false,
                              "sliceEnd": 83,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                          ],
                          "mappings": Array [],
                          "name": null,
                        },
                      },
                      "start": Position {
                        "column": 23,
                        "line": 10,
                      },
                    },
                    "start": 235,
                    "type": "NumberTypeAnnotation",
                  },
                  "variance": null,
                },
              ],
              "loc": SourceLocation {
                "end": Position {
                  "column": 31,
                  "line": 10,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 12,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// @flow",
                        "locked": false,
                        "sliceEnd": 8,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num: number = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 30,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str: string = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 75,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 83,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 11,
                  "line": 10,
                },
              },
              "properties": Array [],
              "start": 223,
              "type": "ObjectTypeAnnotation",
            },
          },
        },
        "init": Node {
          "arguments": Array [
            Node {
              "end": 265,
              "loc": SourceLocation {
                "end": Position {
                  "column": 53,
                  "line": 10,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 12,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// @flow",
                        "locked": false,
                        "sliceEnd": 8,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num: number = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 30,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str: string = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 75,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 83,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 43,
                  "line": 10,
                },
              },
              "properties": Array [
                Node {
                  "computed": false,
                  "end": 263,
                  "key": Node {
                    "end": 260,
                    "extra": Object {
                      "raw": "'a'",
                      "rawValue": "a",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 48,
                        "line": 10,
                      },
                      "indent": 0,
                      "lines": Lines {
                        "length": 12,
                        "name": null,
                        Symbol(recastLinesSecret): Object {
                          "cachedSourceMap": null,
                          "infos": Array [
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// @flow",
                              "locked": false,
                              "sliceEnd": 8,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import R, { add, split } from 'ramda';",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import _, { defaults } from 'lodash';",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const num: number = add(2, 3);",
                              "locked": false,
                              "sliceEnd": 30,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const str: string = R.toLower('XYZ');",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                              "locked": false,
                              "sliceEnd": 75,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                              "locked": false,
                              "sliceEnd": 83,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                          ],
                          "mappings": Array [],
                          "name": null,
                        },
                      },
                      "start": Position {
                        "column": 45,
                        "line": 10,
                      },
                    },
                    "start": 257,
                    "type": "StringLiteral",
                    "value": "a",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 51,
                      "line": 10,
                    },
                    "indent": 0,
                    "lines": Lines {
                      "length": 12,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// @flow",
                            "locked": false,
                            "sliceEnd": 8,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num: number = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 30,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str: string = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 75,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 83,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 45,
                      "line": 10,
                    },
                  },
                  "method": false,
                  "shorthand": false,
                  "start": 257,
                  "type": "ObjectProperty",
                  "value": Node {
                    "end": 263,
                    "extra": Object {
                      "raw": "1",
                      "rawValue": 1,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 51,
                        "line": 10,
                      },
                      "indent": 0,
                      "lines": Lines {
                        "length": 12,
                        "name": null,
                        Symbol(recastLinesSecret): Object {
                          "cachedSourceMap": null,
                          "infos": Array [
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// @flow",
                              "locked": false,
                              "sliceEnd": 8,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import R, { add, split } from 'ramda';",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import _, { defaults } from 'lodash';",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const num: number = add(2, 3);",
                              "locked": false,
                              "sliceEnd": 30,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const str: string = R.toLower('XYZ');",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                              "locked": false,
                              "sliceEnd": 75,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                              "locked": false,
                              "sliceEnd": 83,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                          ],
                          "mappings": Array [],
                          "name": null,
                        },
                      },
                      "start": Position {
                        "column": 50,
                        "line": 10,
                      },
                    },
                    "start": 262,
                    "type": "NumericLiteral",
                    "value": 1,
                  },
                },
              ],
              "start": 255,
              "type": "ObjectExpression",
            },
            Node {
              "end": 285,
              "loc": SourceLocation {
                "end": Position {
                  "column": 73,
                  "line": 10,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 12,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// @flow",
                        "locked": false,
                        "sliceEnd": 8,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num: number = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 30,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str: string = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 75,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 83,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 55,
                  "line": 10,
                },
              },
              "properties": Array [
                Node {
                  "computed": false,
                  "end": 275,
                  "key": Node {
                    "end": 272,
                    "extra": Object {
                      "raw": "'a'",
                      "rawValue": "a",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 60,
                        "line": 10,
                      },
                      "indent": 0,
                      "lines": Lines {
                        "length": 12,
                        "name": null,
                        Symbol(recastLinesSecret): Object {
                          "cachedSourceMap": null,
                          "infos": Array [
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// @flow",
                              "locked": false,
                              "sliceEnd": 8,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import R, { add, split } from 'ramda';",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import _, { defaults } from 'lodash';",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const num: number = add(2, 3);",
                              "locked": false,
                              "sliceEnd": 30,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const str: string = R.toLower('XYZ');",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                              "locked": false,
                              "sliceEnd": 75,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                              "locked": false,
                              "sliceEnd": 83,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                          ],
                          "mappings": Array [],
                          "name": null,
                        },
                      },
                      "start": Position {
                        "column": 57,
                        "line": 10,
                      },
                    },
                    "start": 269,
                    "type": "StringLiteral",
                    "value": "a",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 63,
                      "line": 10,
                    },
                    "indent": 0,
                    "lines": Lines {
                      "length": 12,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// @flow",
                            "locked": false,
                            "sliceEnd": 8,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num: number = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 30,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str: string = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 75,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 83,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 57,
                      "line": 10,
                    },
                  },
                  "method": false,
                  "shorthand": false,
                  "start": 269,
                  "type": "ObjectProperty",
                  "value": Node {
                    "end": 275,
                    "extra": Object {
                      "raw": "3",
                      "rawValue": 3,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 63,
                        "line": 10,
                      },
                      "indent": 0,
                      "lines": Lines {
                        "length": 12,
                        "name": null,
                        Symbol(recastLinesSecret): Object {
                          "cachedSourceMap": null,
                          "infos": Array [
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// @flow",
                              "locked": false,
                              "sliceEnd": 8,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import R, { add, split } from 'ramda';",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import _, { defaults } from 'lodash';",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const num: number = add(2, 3);",
                              "locked": false,
                              "sliceEnd": 30,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const str: string = R.toLower('XYZ');",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                              "locked": false,
                              "sliceEnd": 75,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                              "locked": false,
                              "sliceEnd": 83,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                          ],
                          "mappings": Array [],
                          "name": null,
                        },
                      },
                      "start": Position {
                        "column": 62,
                        "line": 10,
                      },
                    },
                    "start": 274,
                    "type": "NumericLiteral",
                    "value": 3,
                  },
                },
                Node {
                  "computed": false,
                  "end": 283,
                  "key": Node {
                    "end": 280,
                    "extra": Object {
                      "raw": "'b'",
                      "rawValue": "b",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 68,
                        "line": 10,
                      },
                      "indent": 0,
                      "lines": Lines {
                        "length": 12,
                        "name": null,
                        Symbol(recastLinesSecret): Object {
                          "cachedSourceMap": null,
                          "infos": Array [
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// @flow",
                              "locked": false,
                              "sliceEnd": 8,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import R, { add, split } from 'ramda';",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import _, { defaults } from 'lodash';",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const num: number = add(2, 3);",
                              "locked": false,
                              "sliceEnd": 30,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const str: string = R.toLower('XYZ');",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                              "locked": false,
                              "sliceEnd": 75,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                              "locked": false,
                              "sliceEnd": 83,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                          ],
                          "mappings": Array [],
                          "name": null,
                        },
                      },
                      "start": Position {
                        "column": 65,
                        "line": 10,
                      },
                    },
                    "start": 277,
                    "type": "StringLiteral",
                    "value": "b",
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 71,
                      "line": 10,
                    },
                    "indent": 0,
                    "lines": Lines {
                      "length": 12,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// @flow",
                            "locked": false,
                            "sliceEnd": 8,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num: number = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 30,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str: string = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 75,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 83,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 65,
                      "line": 10,
                    },
                  },
                  "method": false,
                  "shorthand": false,
                  "start": 277,
                  "type": "ObjectProperty",
                  "value": Node {
                    "end": 283,
                    "extra": Object {
                      "raw": "2",
                      "rawValue": 2,
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 71,
                        "line": 10,
                      },
                      "indent": 0,
                      "lines": Lines {
                        "length": 12,
                        "name": null,
                        Symbol(recastLinesSecret): Object {
                          "cachedSourceMap": null,
                          "infos": Array [
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// @flow",
                              "locked": false,
                              "sliceEnd": 8,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import R, { add, split } from 'ramda';",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import _, { defaults } from 'lodash';",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const num: number = add(2, 3);",
                              "locked": false,
                              "sliceEnd": 30,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const str: string = R.toLower('XYZ');",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                              "locked": false,
                              "sliceEnd": 75,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                              "locked": false,
                              "sliceEnd": 83,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                          ],
                          "mappings": Array [],
                          "name": null,
                        },
                      },
                      "start": Position {
                        "column": 70,
                        "line": 10,
                      },
                    },
                    "start": 282,
                    "type": "NumericLiteral",
                    "value": 2,
                  },
                },
              ],
              "start": 267,
              "type": "ObjectExpression",
            },
          ],
          "callee": Node {
            "end": 254,
            "loc": SourceLocation {
              "end": Position {
                "column": 42,
                "line": 10,
              },
              "identifierName": "defaults",
              "indent": 0,
              "lines": Lines {
                "length": 12,
                "name": null,
                Symbol(recastLinesSecret): Object {
                  "cachedSourceMap": null,
                  "infos": Array [
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "// @flow",
                      "locked": false,
                      "sliceEnd": 8,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import R, { add, split } from 'ramda';",
                      "locked": false,
                      "sliceEnd": 38,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import _, { defaults } from 'lodash';",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const num: number = add(2, 3);",
                      "locked": false,
                      "sliceEnd": 30,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                      "locked": false,
                      "sliceEnd": 53,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const str: string = R.toLower('XYZ');",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                      "locked": false,
                      "sliceEnd": 75,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                      "locked": false,
                      "sliceEnd": 83,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                  ],
                  "mappings": Array [],
                  "name": null,
                },
              },
              "start": Position {
                "column": 34,
                "line": 10,
              },
            },
            "name": "defaults",
            "start": 246,
            "type": "Identifier",
          },
          "end": 286,
          "loc": SourceLocation {
            "end": Position {
              "column": 74,
              "line": 10,
            },
            "indent": 0,
            "lines": Lines {
              "length": 12,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// @flow",
                    "locked": false,
                    "sliceEnd": 8,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num: number = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 30,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str: string = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 75,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 83,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 34,
              "line": 10,
            },
          },
          "start": 246,
          "type": "CallExpression",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 74,
            "line": 10,
          },
          "indent": 0,
          "lines": Lines {
            "length": 12,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// @flow",
                  "locked": false,
                  "sliceEnd": 8,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num: number = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 30,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str: string = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 75,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 83,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 6,
            "line": 10,
          },
        },
        "start": 218,
        "type": "VariableDeclarator",
      },
    ],
    "end": 287,
    "kind": "const",
    "loc": SourceLocation {
      "end": Position {
        "column": 75,
        "line": 10,
      },
      "indent": 0,
      "lines": Lines {
        "length": 12,
        "name": null,
        Symbol(recastLinesSecret): Object {
          "cachedSourceMap": null,
          "infos": Array [
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// @flow",
              "locked": false,
              "sliceEnd": 8,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import R, { add, split } from 'ramda';",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import _, { defaults } from 'lodash';",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const num: number = add(2, 3);",
              "locked": false,
              "sliceEnd": 30,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const str: string = R.toLower('XYZ');",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
              "locked": false,
              "sliceEnd": 75,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
              "locked": false,
              "sliceEnd": 83,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
          ],
          "mappings": Array [],
          "name": null,
        },
      },
      "start": Position {
        "column": 0,
        "line": 10,
      },
    },
    "start": 212,
    "type": "VariableDeclaration",
  },
  Node {
    "declarations": Array [
      Node {
        "end": 370,
        "id": Node {
          "end": 330,
          "loc": SourceLocation {
            "end": Position {
              "column": 42,
              "line": 11,
            },
            "identifierName": "arrArr",
            "indent": 0,
            "lines": Lines {
              "length": 12,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// @flow",
                    "locked": false,
                    "sliceEnd": 8,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num: number = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 30,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str: string = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 75,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 83,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 6,
              "line": 11,
            },
          },
          "name": "arrArr",
          "start": 294,
          "type": "Identifier",
          "typeAnnotation": Node {
            "end": 330,
            "loc": SourceLocation {
              "end": Position {
                "column": 42,
                "line": 11,
              },
              "indent": 0,
              "lines": Lines {
                "length": 12,
                "name": null,
                Symbol(recastLinesSecret): Object {
                  "cachedSourceMap": null,
                  "infos": Array [
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "// @flow",
                      "locked": false,
                      "sliceEnd": 8,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import R, { add, split } from 'ramda';",
                      "locked": false,
                      "sliceEnd": 38,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import _, { defaults } from 'lodash';",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const num: number = add(2, 3);",
                      "locked": false,
                      "sliceEnd": 30,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                      "locked": false,
                      "sliceEnd": 53,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const str: string = R.toLower('XYZ');",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                      "locked": false,
                      "sliceEnd": 75,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                      "locked": false,
                      "sliceEnd": 83,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                  ],
                  "mappings": Array [],
                  "name": null,
                },
              },
              "start": Position {
                "column": 12,
                "line": 11,
              },
            },
            "start": 300,
            "type": "TypeAnnotation",
            "typeAnnotation": Node {
              "end": 330,
              "id": Node {
                "end": 307,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 19,
                    "line": 11,
                  },
                  "identifierName": "Array",
                  "indent": 0,
                  "lines": Lines {
                    "length": 12,
                    "name": null,
                    Symbol(recastLinesSecret): Object {
                      "cachedSourceMap": null,
                      "infos": Array [
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "// @flow",
                          "locked": false,
                          "sliceEnd": 8,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "import R, { add, split } from 'ramda';",
                          "locked": false,
                          "sliceEnd": 38,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "import _, { defaults } from 'lodash';",
                          "locked": false,
                          "sliceEnd": 37,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const num: number = add(2, 3);",
                          "locked": false,
                          "sliceEnd": 30,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                          "locked": false,
                          "sliceEnd": 53,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const str: string = R.toLower('XYZ');",
                          "locked": false,
                          "sliceEnd": 37,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                          "locked": false,
                          "sliceEnd": 75,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                          "locked": false,
                          "sliceEnd": 83,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                      ],
                      "mappings": Array [],
                      "name": null,
                    },
                  },
                  "start": Position {
                    "column": 14,
                    "line": 11,
                  },
                },
                "name": "Array",
                "start": 302,
                "type": "Identifier",
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 42,
                  "line": 11,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 12,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// @flow",
                        "locked": false,
                        "sliceEnd": 8,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num: number = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 30,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str: string = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 75,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 83,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 14,
                  "line": 11,
                },
              },
              "start": 302,
              "type": "GenericTypeAnnotation",
              "typeParameters": Node {
                "end": 330,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 42,
                    "line": 11,
                  },
                  "indent": 0,
                  "lines": Lines {
                    "length": 12,
                    "name": null,
                    Symbol(recastLinesSecret): Object {
                      "cachedSourceMap": null,
                      "infos": Array [
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "// @flow",
                          "locked": false,
                          "sliceEnd": 8,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "import R, { add, split } from 'ramda';",
                          "locked": false,
                          "sliceEnd": 38,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "import _, { defaults } from 'lodash';",
                          "locked": false,
                          "sliceEnd": 37,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const num: number = add(2, 3);",
                          "locked": false,
                          "sliceEnd": 30,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                          "locked": false,
                          "sliceEnd": 53,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const str: string = R.toLower('XYZ');",
                          "locked": false,
                          "sliceEnd": 37,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                          "locked": false,
                          "sliceEnd": 75,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                          "locked": false,
                          "sliceEnd": 83,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                      ],
                      "mappings": Array [],
                      "name": null,
                    },
                  },
                  "start": Position {
                    "column": 19,
                    "line": 11,
                  },
                },
                "params": Array [
                  Node {
                    "end": 329,
                    "id": Node {
                      "end": 313,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 25,
                          "line": 11,
                        },
                        "identifierName": "Array",
                        "indent": 0,
                        "lines": Lines {
                          "length": 12,
                          "name": null,
                          Symbol(recastLinesSecret): Object {
                            "cachedSourceMap": null,
                            "infos": Array [
                              Object {
                                "indent": 0,
                                "line": "",
                                "locked": false,
                                "sliceEnd": 0,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "// @flow",
                                "locked": false,
                                "sliceEnd": 8,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "import R, { add, split } from 'ramda';",
                                "locked": false,
                                "sliceEnd": 38,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "import _, { defaults } from 'lodash';",
                                "locked": false,
                                "sliceEnd": 37,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "",
                                "locked": false,
                                "sliceEnd": 0,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "const num: number = add(2, 3);",
                                "locked": false,
                                "sliceEnd": 30,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                                "locked": false,
                                "sliceEnd": 53,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "const str: string = R.toLower('XYZ');",
                                "locked": false,
                                "sliceEnd": 37,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "",
                                "locked": false,
                                "sliceEnd": 0,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                                "locked": false,
                                "sliceEnd": 75,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                                "locked": false,
                                "sliceEnd": 83,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "",
                                "locked": false,
                                "sliceEnd": 0,
                                "sliceStart": 0,
                              },
                            ],
                            "mappings": Array [],
                            "name": null,
                          },
                        },
                        "start": Position {
                          "column": 20,
                          "line": 11,
                        },
                      },
                      "name": "Array",
                      "start": 308,
                      "type": "Identifier",
                    },
                    "loc": SourceLocation {
                      "end": Position {
                        "column": 41,
                        "line": 11,
                      },
                      "indent": 0,
                      "lines": Lines {
                        "length": 12,
                        "name": null,
                        Symbol(recastLinesSecret): Object {
                          "cachedSourceMap": null,
                          "infos": Array [
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "// @flow",
                              "locked": false,
                              "sliceEnd": 8,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import R, { add, split } from 'ramda';",
                              "locked": false,
                              "sliceEnd": 38,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "import _, { defaults } from 'lodash';",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const num: number = add(2, 3);",
                              "locked": false,
                              "sliceEnd": 30,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                              "locked": false,
                              "sliceEnd": 53,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const str: string = R.toLower('XYZ');",
                              "locked": false,
                              "sliceEnd": 37,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                              "locked": false,
                              "sliceEnd": 75,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                              "locked": false,
                              "sliceEnd": 83,
                              "sliceStart": 0,
                            },
                            Object {
                              "indent": 0,
                              "line": "",
                              "locked": false,
                              "sliceEnd": 0,
                              "sliceStart": 0,
                            },
                          ],
                          "mappings": Array [],
                          "name": null,
                        },
                      },
                      "start": Position {
                        "column": 20,
                        "line": 11,
                      },
                    },
                    "start": 308,
                    "type": "GenericTypeAnnotation",
                    "typeParameters": Node {
                      "end": 329,
                      "loc": SourceLocation {
                        "end": Position {
                          "column": 41,
                          "line": 11,
                        },
                        "indent": 0,
                        "lines": Lines {
                          "length": 12,
                          "name": null,
                          Symbol(recastLinesSecret): Object {
                            "cachedSourceMap": null,
                            "infos": Array [
                              Object {
                                "indent": 0,
                                "line": "",
                                "locked": false,
                                "sliceEnd": 0,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "// @flow",
                                "locked": false,
                                "sliceEnd": 8,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "import R, { add, split } from 'ramda';",
                                "locked": false,
                                "sliceEnd": 38,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "import _, { defaults } from 'lodash';",
                                "locked": false,
                                "sliceEnd": 37,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "",
                                "locked": false,
                                "sliceEnd": 0,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "const num: number = add(2, 3);",
                                "locked": false,
                                "sliceEnd": 30,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                                "locked": false,
                                "sliceEnd": 53,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "const str: string = R.toLower('XYZ');",
                                "locked": false,
                                "sliceEnd": 37,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "",
                                "locked": false,
                                "sliceEnd": 0,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                                "locked": false,
                                "sliceEnd": 75,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                                "locked": false,
                                "sliceEnd": 83,
                                "sliceStart": 0,
                              },
                              Object {
                                "indent": 0,
                                "line": "",
                                "locked": false,
                                "sliceEnd": 0,
                                "sliceStart": 0,
                              },
                            ],
                            "mappings": Array [],
                            "name": null,
                          },
                        },
                        "start": Position {
                          "column": 25,
                          "line": 11,
                        },
                      },
                      "params": Array [
                        Node {
                          "end": 320,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 32,
                              "line": 11,
                            },
                            "indent": 0,
                            "lines": Lines {
                              "length": 12,
                              "name": null,
                              Symbol(recastLinesSecret): Object {
                                "cachedSourceMap": null,
                                "infos": Array [
                                  Object {
                                    "indent": 0,
                                    "line": "",
                                    "locked": false,
                                    "sliceEnd": 0,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "// @flow",
                                    "locked": false,
                                    "sliceEnd": 8,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "import R, { add, split } from 'ramda';",
                                    "locked": false,
                                    "sliceEnd": 38,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "import _, { defaults } from 'lodash';",
                                    "locked": false,
                                    "sliceEnd": 37,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "",
                                    "locked": false,
                                    "sliceEnd": 0,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "const num: number = add(2, 3);",
                                    "locked": false,
                                    "sliceEnd": 30,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                                    "locked": false,
                                    "sliceEnd": 53,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "const str: string = R.toLower('XYZ');",
                                    "locked": false,
                                    "sliceEnd": 37,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "",
                                    "locked": false,
                                    "sliceEnd": 0,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                                    "locked": false,
                                    "sliceEnd": 75,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                                    "locked": false,
                                    "sliceEnd": 83,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "",
                                    "locked": false,
                                    "sliceEnd": 0,
                                    "sliceStart": 0,
                                  },
                                ],
                                "mappings": Array [],
                                "name": null,
                              },
                            },
                            "start": Position {
                              "column": 26,
                              "line": 11,
                            },
                          },
                          "start": 314,
                          "type": "NumberTypeAnnotation",
                        },
                        Node {
                          "end": 328,
                          "loc": SourceLocation {
                            "end": Position {
                              "column": 40,
                              "line": 11,
                            },
                            "indent": 0,
                            "lines": Lines {
                              "length": 12,
                              "name": null,
                              Symbol(recastLinesSecret): Object {
                                "cachedSourceMap": null,
                                "infos": Array [
                                  Object {
                                    "indent": 0,
                                    "line": "",
                                    "locked": false,
                                    "sliceEnd": 0,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "// @flow",
                                    "locked": false,
                                    "sliceEnd": 8,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "import R, { add, split } from 'ramda';",
                                    "locked": false,
                                    "sliceEnd": 38,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "import _, { defaults } from 'lodash';",
                                    "locked": false,
                                    "sliceEnd": 37,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "",
                                    "locked": false,
                                    "sliceEnd": 0,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "const num: number = add(2, 3);",
                                    "locked": false,
                                    "sliceEnd": 30,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                                    "locked": false,
                                    "sliceEnd": 53,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "const str: string = R.toLower('XYZ');",
                                    "locked": false,
                                    "sliceEnd": 37,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "",
                                    "locked": false,
                                    "sliceEnd": 0,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                                    "locked": false,
                                    "sliceEnd": 75,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                                    "locked": false,
                                    "sliceEnd": 83,
                                    "sliceStart": 0,
                                  },
                                  Object {
                                    "indent": 0,
                                    "line": "",
                                    "locked": false,
                                    "sliceEnd": 0,
                                    "sliceStart": 0,
                                  },
                                ],
                                "mappings": Array [],
                                "name": null,
                              },
                            },
                            "start": Position {
                              "column": 34,
                              "line": 11,
                            },
                          },
                          "start": 322,
                          "type": "NumberTypeAnnotation",
                        },
                      ],
                      "start": 313,
                      "type": "TypeParameterInstantiation",
                    },
                  },
                ],
                "start": 307,
                "type": "TypeParameterInstantiation",
              },
            },
          },
        },
        "init": Node {
          "arguments": Array [
            Node {
              "elements": Array [
                Node {
                  "end": 347,
                  "extra": Object {
                    "raw": "1",
                    "rawValue": 1,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 59,
                      "line": 11,
                    },
                    "indent": 0,
                    "lines": Lines {
                      "length": 12,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// @flow",
                            "locked": false,
                            "sliceEnd": 8,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num: number = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 30,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str: string = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 75,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 83,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 58,
                      "line": 11,
                    },
                  },
                  "start": 346,
                  "type": "NumericLiteral",
                  "value": 1,
                },
                Node {
                  "end": 350,
                  "extra": Object {
                    "raw": "2",
                    "rawValue": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 62,
                      "line": 11,
                    },
                    "indent": 0,
                    "lines": Lines {
                      "length": 12,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// @flow",
                            "locked": false,
                            "sliceEnd": 8,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num: number = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 30,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str: string = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 75,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 83,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 61,
                      "line": 11,
                    },
                  },
                  "start": 349,
                  "type": "NumericLiteral",
                  "value": 2,
                },
                Node {
                  "end": 353,
                  "extra": Object {
                    "raw": "3",
                    "rawValue": 3,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 65,
                      "line": 11,
                    },
                    "indent": 0,
                    "lines": Lines {
                      "length": 12,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// @flow",
                            "locked": false,
                            "sliceEnd": 8,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num: number = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 30,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str: string = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 75,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 83,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 64,
                      "line": 11,
                    },
                  },
                  "start": 352,
                  "type": "NumericLiteral",
                  "value": 3,
                },
                Node {
                  "end": 356,
                  "extra": Object {
                    "raw": "4",
                    "rawValue": 4,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 68,
                      "line": 11,
                    },
                    "indent": 0,
                    "lines": Lines {
                      "length": 12,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// @flow",
                            "locked": false,
                            "sliceEnd": 8,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num: number = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 30,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str: string = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 75,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 83,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 67,
                      "line": 11,
                    },
                  },
                  "start": 355,
                  "type": "NumericLiteral",
                  "value": 4,
                },
              ],
              "end": 357,
              "loc": SourceLocation {
                "end": Position {
                  "column": 69,
                  "line": 11,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 12,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// @flow",
                        "locked": false,
                        "sliceEnd": 8,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num: number = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 30,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str: string = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 75,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 83,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 57,
                  "line": 11,
                },
              },
              "start": 345,
              "type": "ArrayExpression",
            },
            Node {
              "async": false,
              "body": Node {
                "end": 369,
                "left": Node {
                  "end": 365,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 77,
                      "line": 11,
                    },
                    "identifierName": "n",
                    "indent": 0,
                    "lines": Lines {
                      "length": 12,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// @flow",
                            "locked": false,
                            "sliceEnd": 8,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num: number = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 30,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str: string = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 75,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 83,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 76,
                      "line": 11,
                    },
                  },
                  "name": "n",
                  "start": 364,
                  "type": "Identifier",
                },
                "loc": SourceLocation {
                  "end": Position {
                    "column": 81,
                    "line": 11,
                  },
                  "indent": 0,
                  "lines": Lines {
                    "length": 12,
                    "name": null,
                    Symbol(recastLinesSecret): Object {
                      "cachedSourceMap": null,
                      "infos": Array [
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "// @flow",
                          "locked": false,
                          "sliceEnd": 8,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "import R, { add, split } from 'ramda';",
                          "locked": false,
                          "sliceEnd": 38,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "import _, { defaults } from 'lodash';",
                          "locked": false,
                          "sliceEnd": 37,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const num: number = add(2, 3);",
                          "locked": false,
                          "sliceEnd": 30,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                          "locked": false,
                          "sliceEnd": 53,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const str: string = R.toLower('XYZ');",
                          "locked": false,
                          "sliceEnd": 37,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                          "locked": false,
                          "sliceEnd": 75,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                          "locked": false,
                          "sliceEnd": 83,
                          "sliceStart": 0,
                        },
                        Object {
                          "indent": 0,
                          "line": "",
                          "locked": false,
                          "sliceEnd": 0,
                          "sliceStart": 0,
                        },
                      ],
                      "mappings": Array [],
                      "name": null,
                    },
                  },
                  "start": Position {
                    "column": 76,
                    "line": 11,
                  },
                },
                "operator": "%",
                "right": Node {
                  "end": 369,
                  "extra": Object {
                    "raw": "2",
                    "rawValue": 2,
                  },
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 81,
                      "line": 11,
                    },
                    "indent": 0,
                    "lines": Lines {
                      "length": 12,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// @flow",
                            "locked": false,
                            "sliceEnd": 8,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num: number = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 30,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str: string = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 75,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 83,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 80,
                      "line": 11,
                    },
                  },
                  "start": 368,
                  "type": "NumericLiteral",
                  "value": 2,
                },
                "start": 364,
                "type": "BinaryExpression",
              },
              "end": 369,
              "expression": true,
              "generator": false,
              "id": null,
              "loc": SourceLocation {
                "end": Position {
                  "column": 81,
                  "line": 11,
                },
                "indent": 0,
                "lines": Lines {
                  "length": 12,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// @flow",
                        "locked": false,
                        "sliceEnd": 8,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num: number = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 30,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str: string = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 75,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 83,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 71,
                  "line": 11,
                },
              },
              "params": Array [
                Node {
                  "end": 360,
                  "loc": SourceLocation {
                    "end": Position {
                      "column": 72,
                      "line": 11,
                    },
                    "identifierName": "n",
                    "indent": 0,
                    "lines": Lines {
                      "length": 12,
                      "name": null,
                      Symbol(recastLinesSecret): Object {
                        "cachedSourceMap": null,
                        "infos": Array [
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "// @flow",
                            "locked": false,
                            "sliceEnd": 8,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import R, { add, split } from 'ramda';",
                            "locked": false,
                            "sliceEnd": 38,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "import _, { defaults } from 'lodash';",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const num: number = add(2, 3);",
                            "locked": false,
                            "sliceEnd": 30,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                            "locked": false,
                            "sliceEnd": 53,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const str: string = R.toLower('XYZ');",
                            "locked": false,
                            "sliceEnd": 37,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                            "locked": false,
                            "sliceEnd": 75,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                            "locked": false,
                            "sliceEnd": 83,
                            "sliceStart": 0,
                          },
                          Object {
                            "indent": 0,
                            "line": "",
                            "locked": false,
                            "sliceEnd": 0,
                            "sliceStart": 0,
                          },
                        ],
                        "mappings": Array [],
                        "name": null,
                      },
                    },
                    "start": Position {
                      "column": 71,
                      "line": 11,
                    },
                  },
                  "name": "n",
                  "start": 359,
                  "type": "Identifier",
                },
              ],
              "start": 359,
              "type": "ArrowFunctionExpression",
            },
          ],
          "callee": Node {
            "computed": false,
            "end": 344,
            "loc": SourceLocation {
              "end": Position {
                "column": 56,
                "line": 11,
              },
              "indent": 0,
              "lines": Lines {
                "length": 12,
                "name": null,
                Symbol(recastLinesSecret): Object {
                  "cachedSourceMap": null,
                  "infos": Array [
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "// @flow",
                      "locked": false,
                      "sliceEnd": 8,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import R, { add, split } from 'ramda';",
                      "locked": false,
                      "sliceEnd": 38,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "import _, { defaults } from 'lodash';",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const num: number = add(2, 3);",
                      "locked": false,
                      "sliceEnd": 30,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                      "locked": false,
                      "sliceEnd": 53,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const str: string = R.toLower('XYZ');",
                      "locked": false,
                      "sliceEnd": 37,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                      "locked": false,
                      "sliceEnd": 75,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                      "locked": false,
                      "sliceEnd": 83,
                      "sliceStart": 0,
                    },
                    Object {
                      "indent": 0,
                      "line": "",
                      "locked": false,
                      "sliceEnd": 0,
                      "sliceStart": 0,
                    },
                  ],
                  "mappings": Array [],
                  "name": null,
                },
              },
              "start": Position {
                "column": 45,
                "line": 11,
              },
            },
            "object": Node {
              "end": 334,
              "loc": SourceLocation {
                "end": Position {
                  "column": 46,
                  "line": 11,
                },
                "identifierName": "_",
                "indent": 0,
                "lines": Lines {
                  "length": 12,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// @flow",
                        "locked": false,
                        "sliceEnd": 8,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num: number = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 30,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str: string = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 75,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 83,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 45,
                  "line": 11,
                },
              },
              "name": "_",
              "start": 333,
              "type": "Identifier",
            },
            "property": Node {
              "end": 344,
              "loc": SourceLocation {
                "end": Position {
                  "column": 56,
                  "line": 11,
                },
                "identifierName": "partition",
                "indent": 0,
                "lines": Lines {
                  "length": 12,
                  "name": null,
                  Symbol(recastLinesSecret): Object {
                    "cachedSourceMap": null,
                    "infos": Array [
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "// @flow",
                        "locked": false,
                        "sliceEnd": 8,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import R, { add, split } from 'ramda';",
                        "locked": false,
                        "sliceEnd": 38,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "import _, { defaults } from 'lodash';",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const num: number = add(2, 3);",
                        "locked": false,
                        "sliceEnd": 30,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                        "locked": false,
                        "sliceEnd": 53,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const str: string = R.toLower('XYZ');",
                        "locked": false,
                        "sliceEnd": 37,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                        "locked": false,
                        "sliceEnd": 75,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                        "locked": false,
                        "sliceEnd": 83,
                        "sliceStart": 0,
                      },
                      Object {
                        "indent": 0,
                        "line": "",
                        "locked": false,
                        "sliceEnd": 0,
                        "sliceStart": 0,
                      },
                    ],
                    "mappings": Array [],
                    "name": null,
                  },
                },
                "start": Position {
                  "column": 47,
                  "line": 11,
                },
              },
              "name": "partition",
              "start": 335,
              "type": "Identifier",
            },
            "start": 333,
            "type": "MemberExpression",
          },
          "end": 370,
          "loc": SourceLocation {
            "end": Position {
              "column": 82,
              "line": 11,
            },
            "indent": 0,
            "lines": Lines {
              "length": 12,
              "name": null,
              Symbol(recastLinesSecret): Object {
                "cachedSourceMap": null,
                "infos": Array [
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "// @flow",
                    "locked": false,
                    "sliceEnd": 8,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import R, { add, split } from 'ramda';",
                    "locked": false,
                    "sliceEnd": 38,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "import _, { defaults } from 'lodash';",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const num: number = add(2, 3);",
                    "locked": false,
                    "sliceEnd": 30,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                    "locked": false,
                    "sliceEnd": 53,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const str: string = R.toLower('XYZ');",
                    "locked": false,
                    "sliceEnd": 37,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                    "locked": false,
                    "sliceEnd": 75,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                    "locked": false,
                    "sliceEnd": 83,
                    "sliceStart": 0,
                  },
                  Object {
                    "indent": 0,
                    "line": "",
                    "locked": false,
                    "sliceEnd": 0,
                    "sliceStart": 0,
                  },
                ],
                "mappings": Array [],
                "name": null,
              },
            },
            "start": Position {
              "column": 45,
              "line": 11,
            },
          },
          "start": 333,
          "type": "CallExpression",
        },
        "loc": SourceLocation {
          "end": Position {
            "column": 82,
            "line": 11,
          },
          "indent": 0,
          "lines": Lines {
            "length": 12,
            "name": null,
            Symbol(recastLinesSecret): Object {
              "cachedSourceMap": null,
              "infos": Array [
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "// @flow",
                  "locked": false,
                  "sliceEnd": 8,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import R, { add, split } from 'ramda';",
                  "locked": false,
                  "sliceEnd": 38,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "import _, { defaults } from 'lodash';",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const num: number = add(2, 3);",
                  "locked": false,
                  "sliceEnd": 30,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
                  "locked": false,
                  "sliceEnd": 53,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const str: string = R.toLower('XYZ');",
                  "locked": false,
                  "sliceEnd": 37,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
                  "locked": false,
                  "sliceEnd": 75,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
                  "locked": false,
                  "sliceEnd": 83,
                  "sliceStart": 0,
                },
                Object {
                  "indent": 0,
                  "line": "",
                  "locked": false,
                  "sliceEnd": 0,
                  "sliceStart": 0,
                },
              ],
              "mappings": Array [],
              "name": null,
            },
          },
          "start": Position {
            "column": 6,
            "line": 11,
          },
        },
        "start": 294,
        "type": "VariableDeclarator",
      },
    ],
    "end": 371,
    "kind": "const",
    "loc": SourceLocation {
      "end": Position {
        "column": 83,
        "line": 11,
      },
      "indent": 0,
      "lines": Lines {
        "length": 12,
        "name": null,
        Symbol(recastLinesSecret): Object {
          "cachedSourceMap": null,
          "infos": Array [
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "// @flow",
              "locked": false,
              "sliceEnd": 8,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import R, { add, split } from 'ramda';",
              "locked": false,
              "sliceEnd": 38,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "import _, { defaults } from 'lodash';",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const num: number = add(2, 3);",
              "locked": false,
              "sliceEnd": 30,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arr: Array<string> = split('.', 'a.b.c.xyz.d');",
              "locked": false,
              "sliceEnd": 53,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const str: string = R.toLower('XYZ');",
              "locked": false,
              "sliceEnd": 37,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const obj: { [string]: number } = defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });",
              "locked": false,
              "sliceEnd": 75,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "const arrArr: Array<Array<number, number>> = _.partition([1, 2, 3, 4], n => n % 2);",
              "locked": false,
              "sliceEnd": 83,
              "sliceStart": 0,
            },
            Object {
              "indent": 0,
              "line": "",
              "locked": false,
              "sliceEnd": 0,
              "sliceStart": 0,
            },
          ],
          "mappings": Array [],
          "name": null,
        },
      },
      "start": Position {
        "column": 0,
        "line": 11,
      },
    },
    "start": 288,
    "type": "VariableDeclaration",
  },
]
`;

exports[`Flow code displayOutput 1`] = `
"
[1mUsage for 'ramda' in 1 files[22m
---------

[34mℹ[39m Using [1m1.18[22m% out of [1m255[22m available exports

[1mUsed fns (3)[22m
  - add, split, toLower

[1mUnused fns (252)[22m
  - __, addIndex, adjust, all, allPass, always, and, any, anyPass, ap, aperture, append, apply, applySpec, applyTo, ascend, assoc, assocPath, binary, bind, both, call, chain, clamp, clone, comparator, complement, compose, composeK, composeP, composeWith, concat, cond, construct, constructN, contains, converge, countBy, curry, curryN, dec, defaultTo, descend, difference, differenceWith, dissoc, dissocPath, divide, drop, dropLast, dropLastWhile, dropRepeats, dropRepeatsWith, dropWhile, either, empty, endsWith, eqBy, eqProps, equals, evolve, F, filter, find, findIndex, findLast, findLastIndex, flatten, flip, forEach, forEachObjIndexed, fromPairs, groupBy, groupWith, gt, gte, has, hasIn, hasPath, head, identical, identity, ifElse, inc, includes, indexBy, indexOf, init, innerJoin, insert, insertAll, intersection, intersperse, into, invert, invertObj, invoker, is, isEmpty, isNil, join, juxt, keys, keysIn, last, lastIndexOf, length, lens, lensIndex, lensPath, lensProp, lift, liftN, lt, lte, map, mapAccum, mapAccumRight, mapObjIndexed, match, mathMod, max, maxBy, mean, median, memoizeWith, merge, mergeAll, mergeDeepLeft, mergeDeepRight, mergeDeepWith, mergeDeepWithKey, mergeLeft, mergeRight, mergeWith, mergeWithKey, min, minBy, modulo, move, multiply, nAry, negate, none, not, nth, nthArg, o, objOf, of, omit, once, or, otherwise, over, pair, partial, partialRight, partition, path, pathEq, pathOr, pathSatisfies, pick, pickAll, pickBy, pipe, pipeK, pipeP, pipeWith, pluck, prepend, product, project, prop, propEq, propIs, propOr, props, propSatisfies, range, reduce, reduceBy, reduced, reduceRight, reduceWhile, reject, remove, repeat, replace, reverse, scan, sequence, set, slice, sort, sortBy, sortWith, splitAt, splitEvery, splitWhen, startsWith, subtract, sum, symmetricDifference, symmetricDifferenceWith, T, tail, take, takeLast, takeLastWhile, takeWhile, tap, test, then, thunkify, times, toPairs, toPairsIn, toString, toUpper, transduce, transpose, traverse, trim, tryCatch, type, unapply, unary, uncurryN, unfold, union, unionWith, uniq, uniqBy, uniqWith, unless, unnest, until, update, useWith, values, valuesIn, view, when, where, whereEq, without, xprod, zip, zipObj, zipWith
"
`;

exports[`Flow code displayOutput 2`] = `
"
[1mUsage for 'lodash' in 1 files[22m
---------

[34mℹ[39m Using [1m0.65[22m% out of [1m308[22m available exports

[1mUsed fns (2)[22m
  - defaults, partition

[1mUnused fns (306)[22m
  - _, add, after, ary, assign, assignIn, assignInWith, assignWith, at, attempt, before, bind, bindAll, bindKey, camelCase, capitalize, castArray, ceil, chain, chunk, clamp, clone, cloneDeep, cloneDeepWith, cloneWith, compact, concat, cond, conforms, conformsTo, constant, countBy, create, curry, curryRight, debounce, deburr, defaultsDeep, defaultTo, defer, delay, difference, differenceBy, differenceWith, divide, drop, dropRight, dropRightWhile, dropWhile, each, eachRight, endsWith, entries, entriesIn, eq, escape, escapeRegExp, every, extend, extendWith, fill, filter, find, findIndex, findKey, findLast, findLastIndex, findLastKey, first, flatMap, flatMapDeep, flatMapDepth, flatten, flattenDeep, flattenDepth, flip, floor, flow, flowRight, forEach, forEachRight, forIn, forInRight, forOwn, forOwnRight, fromPairs, functions, functionsIn, get, groupBy, gt, gte, has, hasIn, head, identity, includes, indexOf, initial, inRange, intersection, intersectionBy, intersectionWith, invert, invertBy, invoke, invokeMap, isArguments, isArray, isArrayBuffer, isArrayLike, isArrayLikeObject, isBoolean, isBuffer, isDate, isElement, isEmpty, isEqual, isEqualWith, isError, isFinite, isFunction, isInteger, isLength, isMap, isMatch, isMatchWith, isNaN, isNative, isNil, isNull, isNumber, isObject, isObjectLike, isPlainObject, isRegExp, isSafeInteger, isSet, isString, isSymbol, isTypedArray, isUndefined, isWeakMap, isWeakSet, iteratee, join, kebabCase, keyBy, keys, keysIn, last, lastIndexOf, lowerCase, lowerFirst, lt, lte, map, mapKeys, mapValues, matches, matchesProperty, max, maxBy, mean, meanBy, memoize, merge, mergeWith, method, methodOf, min, minBy, mixin, multiply, negate, noConflict, noop, now, nth, nthArg, omit, omitBy, once, orderBy, over, overArgs, overEvery, overSome, pad, padEnd, padStart, parseInt, partial, partialRight, pick, pickBy, property, propertyOf, pull, pullAll, pullAllBy, pullAllWith, pullAt, random, range, rangeRight, rearg, reduce, reduceRight, reject, remove, repeat, replace, rest, result, reverse, round, runInContext, sample, sampleSize, set, setWith, shuffle, size, slice, snakeCase, some, sortBy, sortedIndex, sortedIndexBy, sortedIndexOf, sortedLastIndex, sortedLastIndexBy, sortedLastIndexOf, sortedUniq, sortedUniqBy, split, spread, startCase, startsWith, stubArray, stubFalse, stubObject, stubString, stubTrue, subtract, sum, sumBy, tail, take, takeRight, takeRightWhile, takeWhile, tap, template, templateSettings, throttle, thru, times, toArray, toFinite, toInteger, toLength, toLower, toNumber, toPairs, toPairsIn, toPath, toPlainObject, toSafeInteger, toString, toUpper, transform, trim, trimEnd, trimStart, truncate, unary, unescape, union, unionBy, unionWith, uniq, uniqBy, uniqueId, uniqWith, unset, unzip, unzipWith, update, updateWith, upperCase, upperFirst, values, valuesIn, VERSION, without, words, wrap, xor, xorBy, xorWith, zip, zipObject, zipObjectDeep, zipWith
"
`;

exports[`Generic getAvailableFns 1`] = `
Array [
  "F",
  "T",
  "__",
  "add",
  "addIndex",
  "adjust",
  "all",
  "allPass",
  "always",
  "and",
  "any",
  "anyPass",
  "ap",
  "aperture",
  "append",
  "apply",
  "applySpec",
  "applyTo",
  "ascend",
  "assoc",
  "assocPath",
  "binary",
  "bind",
  "both",
  "call",
  "chain",
  "clamp",
  "clone",
  "comparator",
  "complement",
  "compose",
  "composeK",
  "composeP",
  "composeWith",
  "concat",
  "cond",
  "construct",
  "constructN",
  "contains",
  "converge",
  "countBy",
  "curry",
  "curryN",
  "dec",
  "defaultTo",
  "descend",
  "difference",
  "differenceWith",
  "dissoc",
  "dissocPath",
  "divide",
  "drop",
  "dropLast",
  "dropLastWhile",
  "dropRepeats",
  "dropRepeatsWith",
  "dropWhile",
  "either",
  "empty",
  "endsWith",
  "eqBy",
  "eqProps",
  "equals",
  "evolve",
  "filter",
  "find",
  "findIndex",
  "findLast",
  "findLastIndex",
  "flatten",
  "flip",
  "forEach",
  "forEachObjIndexed",
  "fromPairs",
  "groupBy",
  "groupWith",
  "gt",
  "gte",
  "has",
  "hasIn",
  "hasPath",
  "head",
  "identical",
  "identity",
  "ifElse",
  "inc",
  "includes",
  "indexBy",
  "indexOf",
  "init",
  "innerJoin",
  "insert",
  "insertAll",
  "intersection",
  "intersperse",
  "into",
  "invert",
  "invertObj",
  "invoker",
  "is",
  "isEmpty",
  "isNil",
  "join",
  "juxt",
  "keys",
  "keysIn",
  "last",
  "lastIndexOf",
  "length",
  "lens",
  "lensIndex",
  "lensPath",
  "lensProp",
  "lift",
  "liftN",
  "lt",
  "lte",
  "map",
  "mapAccum",
  "mapAccumRight",
  "mapObjIndexed",
  "match",
  "mathMod",
  "max",
  "maxBy",
  "mean",
  "median",
  "memoizeWith",
  "merge",
  "mergeAll",
  "mergeDeepLeft",
  "mergeDeepRight",
  "mergeDeepWith",
  "mergeDeepWithKey",
  "mergeLeft",
  "mergeRight",
  "mergeWith",
  "mergeWithKey",
  "min",
  "minBy",
  "modulo",
  "move",
  "multiply",
  "nAry",
  "negate",
  "none",
  "not",
  "nth",
  "nthArg",
  "o",
  "objOf",
  "of",
  "omit",
  "once",
  "or",
  "otherwise",
  "over",
  "pair",
  "partial",
  "partialRight",
  "partition",
  "path",
  "pathEq",
  "pathOr",
  "pathSatisfies",
  "pick",
  "pickAll",
  "pickBy",
  "pipe",
  "pipeK",
  "pipeP",
  "pipeWith",
  "pluck",
  "prepend",
  "product",
  "project",
  "prop",
  "propEq",
  "propIs",
  "propOr",
  "propSatisfies",
  "props",
  "range",
  "reduce",
  "reduceBy",
  "reduceRight",
  "reduceWhile",
  "reduced",
  "reject",
  "remove",
  "repeat",
  "replace",
  "reverse",
  "scan",
  "sequence",
  "set",
  "slice",
  "sort",
  "sortBy",
  "sortWith",
  "split",
  "splitAt",
  "splitEvery",
  "splitWhen",
  "startsWith",
  "subtract",
  "sum",
  "symmetricDifference",
  "symmetricDifferenceWith",
  "tail",
  "take",
  "takeLast",
  "takeLastWhile",
  "takeWhile",
  "tap",
  "test",
  "then",
  "times",
  "toLower",
  "toPairs",
  "toPairsIn",
  "toString",
  "toUpper",
  "transduce",
  "transpose",
  "traverse",
  "trim",
  "tryCatch",
  "type",
  "unapply",
  "unary",
  "uncurryN",
  "unfold",
  "union",
  "unionWith",
  "uniq",
  "uniqBy",
  "uniqWith",
  "unless",
  "unnest",
  "until",
  "update",
  "useWith",
  "values",
  "valuesIn",
  "view",
  "when",
  "where",
  "whereEq",
  "without",
  "xprod",
  "zip",
  "zipObj",
  "zipWith",
  "thunkify",
]
`;

exports[`Generic getAvailableFns 2`] = `
Array [
  "templateSettings",
  "after",
  "ary",
  "assign",
  "assignIn",
  "assignInWith",
  "assignWith",
  "at",
  "before",
  "bind",
  "bindAll",
  "bindKey",
  "castArray",
  "chain",
  "chunk",
  "compact",
  "concat",
  "cond",
  "conforms",
  "constant",
  "countBy",
  "create",
  "curry",
  "curryRight",
  "debounce",
  "defaults",
  "defaultsDeep",
  "defer",
  "delay",
  "difference",
  "differenceBy",
  "differenceWith",
  "drop",
  "dropRight",
  "dropRightWhile",
  "dropWhile",
  "fill",
  "filter",
  "flatMap",
  "flatMapDeep",
  "flatMapDepth",
  "flatten",
  "flattenDeep",
  "flattenDepth",
  "flip",
  "flow",
  "flowRight",
  "fromPairs",
  "functions",
  "functionsIn",
  "groupBy",
  "initial",
  "intersection",
  "intersectionBy",
  "intersectionWith",
  "invert",
  "invertBy",
  "invokeMap",
  "iteratee",
  "keyBy",
  "keys",
  "keysIn",
  "map",
  "mapKeys",
  "mapValues",
  "matches",
  "matchesProperty",
  "memoize",
  "merge",
  "mergeWith",
  "method",
  "methodOf",
  "mixin",
  "negate",
  "nthArg",
  "omit",
  "omitBy",
  "once",
  "orderBy",
  "over",
  "overArgs",
  "overEvery",
  "overSome",
  "partial",
  "partialRight",
  "partition",
  "pick",
  "pickBy",
  "property",
  "propertyOf",
  "pull",
  "pullAll",
  "pullAllBy",
  "pullAllWith",
  "pullAt",
  "range",
  "rangeRight",
  "rearg",
  "reject",
  "remove",
  "rest",
  "reverse",
  "sampleSize",
  "set",
  "setWith",
  "shuffle",
  "slice",
  "sortBy",
  "sortedUniq",
  "sortedUniqBy",
  "split",
  "spread",
  "tail",
  "take",
  "takeRight",
  "takeRightWhile",
  "takeWhile",
  "tap",
  "throttle",
  "thru",
  "toArray",
  "toPairs",
  "toPairsIn",
  "toPath",
  "toPlainObject",
  "transform",
  "unary",
  "union",
  "unionBy",
  "unionWith",
  "uniq",
  "uniqBy",
  "uniqWith",
  "unset",
  "unzip",
  "unzipWith",
  "update",
  "updateWith",
  "values",
  "valuesIn",
  "without",
  "words",
  "wrap",
  "xor",
  "xorBy",
  "xorWith",
  "zip",
  "zipObject",
  "zipObjectDeep",
  "zipWith",
  "entries",
  "entriesIn",
  "extend",
  "extendWith",
  "add",
  "attempt",
  "camelCase",
  "capitalize",
  "ceil",
  "clamp",
  "clone",
  "cloneDeep",
  "cloneDeepWith",
  "cloneWith",
  "conformsTo",
  "deburr",
  "defaultTo",
  "divide",
  "endsWith",
  "eq",
  "escape",
  "escapeRegExp",
  "every",
  "find",
  "findIndex",
  "findKey",
  "findLast",
  "findLastIndex",
  "findLastKey",
  "floor",
  "forEach",
  "forEachRight",
  "forIn",
  "forInRight",
  "forOwn",
  "forOwnRight",
  "get",
  "gt",
  "gte",
  "has",
  "hasIn",
  "head",
  "identity",
  "includes",
  "indexOf",
  "inRange",
  "invoke",
  "isArguments",
  "isArray",
  "isArrayBuffer",
  "isArrayLike",
  "isArrayLikeObject",
  "isBoolean",
  "isBuffer",
  "isDate",
  "isElement",
  "isEmpty",
  "isEqual",
  "isEqualWith",
  "isError",
  "isFinite",
  "isFunction",
  "isInteger",
  "isLength",
  "isMap",
  "isMatch",
  "isMatchWith",
  "isNaN",
  "isNative",
  "isNil",
  "isNull",
  "isNumber",
  "isObject",
  "isObjectLike",
  "isPlainObject",
  "isRegExp",
  "isSafeInteger",
  "isSet",
  "isString",
  "isSymbol",
  "isTypedArray",
  "isUndefined",
  "isWeakMap",
  "isWeakSet",
  "join",
  "kebabCase",
  "last",
  "lastIndexOf",
  "lowerCase",
  "lowerFirst",
  "lt",
  "lte",
  "max",
  "maxBy",
  "mean",
  "meanBy",
  "min",
  "minBy",
  "stubArray",
  "stubFalse",
  "stubObject",
  "stubString",
  "stubTrue",
  "multiply",
  "nth",
  "noConflict",
  "noop",
  "now",
  "pad",
  "padEnd",
  "padStart",
  "parseInt",
  "random",
  "reduce",
  "reduceRight",
  "repeat",
  "replace",
  "result",
  "round",
  "runInContext",
  "sample",
  "size",
  "snakeCase",
  "some",
  "sortedIndex",
  "sortedIndexBy",
  "sortedIndexOf",
  "sortedLastIndex",
  "sortedLastIndexBy",
  "sortedLastIndexOf",
  "startCase",
  "startsWith",
  "subtract",
  "sum",
  "sumBy",
  "template",
  "times",
  "toFinite",
  "toInteger",
  "toLength",
  "toLower",
  "toNumber",
  "toSafeInteger",
  "toString",
  "toUpper",
  "trim",
  "trimEnd",
  "trimStart",
  "truncate",
  "unescape",
  "uniqueId",
  "upperCase",
  "upperFirst",
  "each",
  "eachRight",
  "first",
  "VERSION",
  "_",
]
`;
